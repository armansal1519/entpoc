// Code generated by ent, DO NOT EDIT.

package product

import (
	"entpoc/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldName, v))
}

// TableName0 applies equality check predicate on the "table_name0" field. It's identical to TableName0EQ.
func TableName0(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName0, v))
}

// TableName1 applies equality check predicate on the "table_name1" field. It's identical to TableName1EQ.
func TableName1(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName1, v))
}

// TableName2 applies equality check predicate on the "table_name2" field. It's identical to TableName2EQ.
func TableName2(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName2, v))
}

// TableName3 applies equality check predicate on the "table_name3" field. It's identical to TableName3EQ.
func TableName3(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName3, v))
}

// TableName4 applies equality check predicate on the "table_name4" field. It's identical to TableName4EQ.
func TableName4(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName4, v))
}

// TableName5 applies equality check predicate on the "table_name5" field. It's identical to TableName5EQ.
func TableName5(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName5, v))
}

// TableName6 applies equality check predicate on the "table_name6" field. It's identical to TableName6EQ.
func TableName6(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName6, v))
}

// TableName7 applies equality check predicate on the "table_name7" field. It's identical to TableName7EQ.
func TableName7(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName7, v))
}

// TableName8 applies equality check predicate on the "table_name8" field. It's identical to TableName8EQ.
func TableName8(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName8, v))
}

// TableName9 applies equality check predicate on the "table_name9" field. It's identical to TableName9EQ.
func TableName9(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName9, v))
}

// TableName10 applies equality check predicate on the "table_name10" field. It's identical to TableName10EQ.
func TableName10(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName10, v))
}

// TableName11 applies equality check predicate on the "table_name11" field. It's identical to TableName11EQ.
func TableName11(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName11, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldName, v))
}

// TableName0EQ applies the EQ predicate on the "table_name0" field.
func TableName0EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName0, v))
}

// TableName0NEQ applies the NEQ predicate on the "table_name0" field.
func TableName0NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName0, v))
}

// TableName0In applies the In predicate on the "table_name0" field.
func TableName0In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName0, vs...))
}

// TableName0NotIn applies the NotIn predicate on the "table_name0" field.
func TableName0NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName0, vs...))
}

// TableName0GT applies the GT predicate on the "table_name0" field.
func TableName0GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName0, v))
}

// TableName0GTE applies the GTE predicate on the "table_name0" field.
func TableName0GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName0, v))
}

// TableName0LT applies the LT predicate on the "table_name0" field.
func TableName0LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName0, v))
}

// TableName0LTE applies the LTE predicate on the "table_name0" field.
func TableName0LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName0, v))
}

// TableName0Contains applies the Contains predicate on the "table_name0" field.
func TableName0Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName0, v))
}

// TableName0HasPrefix applies the HasPrefix predicate on the "table_name0" field.
func TableName0HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName0, v))
}

// TableName0HasSuffix applies the HasSuffix predicate on the "table_name0" field.
func TableName0HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName0, v))
}

// TableName0EqualFold applies the EqualFold predicate on the "table_name0" field.
func TableName0EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName0, v))
}

// TableName0ContainsFold applies the ContainsFold predicate on the "table_name0" field.
func TableName0ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName0, v))
}

// TableName1EQ applies the EQ predicate on the "table_name1" field.
func TableName1EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName1, v))
}

// TableName1NEQ applies the NEQ predicate on the "table_name1" field.
func TableName1NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName1, v))
}

// TableName1In applies the In predicate on the "table_name1" field.
func TableName1In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName1, vs...))
}

// TableName1NotIn applies the NotIn predicate on the "table_name1" field.
func TableName1NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName1, vs...))
}

// TableName1GT applies the GT predicate on the "table_name1" field.
func TableName1GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName1, v))
}

// TableName1GTE applies the GTE predicate on the "table_name1" field.
func TableName1GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName1, v))
}

// TableName1LT applies the LT predicate on the "table_name1" field.
func TableName1LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName1, v))
}

// TableName1LTE applies the LTE predicate on the "table_name1" field.
func TableName1LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName1, v))
}

// TableName1Contains applies the Contains predicate on the "table_name1" field.
func TableName1Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName1, v))
}

// TableName1HasPrefix applies the HasPrefix predicate on the "table_name1" field.
func TableName1HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName1, v))
}

// TableName1HasSuffix applies the HasSuffix predicate on the "table_name1" field.
func TableName1HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName1, v))
}

// TableName1EqualFold applies the EqualFold predicate on the "table_name1" field.
func TableName1EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName1, v))
}

// TableName1ContainsFold applies the ContainsFold predicate on the "table_name1" field.
func TableName1ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName1, v))
}

// TableName2EQ applies the EQ predicate on the "table_name2" field.
func TableName2EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName2, v))
}

// TableName2NEQ applies the NEQ predicate on the "table_name2" field.
func TableName2NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName2, v))
}

// TableName2In applies the In predicate on the "table_name2" field.
func TableName2In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName2, vs...))
}

// TableName2NotIn applies the NotIn predicate on the "table_name2" field.
func TableName2NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName2, vs...))
}

// TableName2GT applies the GT predicate on the "table_name2" field.
func TableName2GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName2, v))
}

// TableName2GTE applies the GTE predicate on the "table_name2" field.
func TableName2GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName2, v))
}

// TableName2LT applies the LT predicate on the "table_name2" field.
func TableName2LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName2, v))
}

// TableName2LTE applies the LTE predicate on the "table_name2" field.
func TableName2LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName2, v))
}

// TableName2Contains applies the Contains predicate on the "table_name2" field.
func TableName2Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName2, v))
}

// TableName2HasPrefix applies the HasPrefix predicate on the "table_name2" field.
func TableName2HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName2, v))
}

// TableName2HasSuffix applies the HasSuffix predicate on the "table_name2" field.
func TableName2HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName2, v))
}

// TableName2EqualFold applies the EqualFold predicate on the "table_name2" field.
func TableName2EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName2, v))
}

// TableName2ContainsFold applies the ContainsFold predicate on the "table_name2" field.
func TableName2ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName2, v))
}

// TableName3EQ applies the EQ predicate on the "table_name3" field.
func TableName3EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName3, v))
}

// TableName3NEQ applies the NEQ predicate on the "table_name3" field.
func TableName3NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName3, v))
}

// TableName3In applies the In predicate on the "table_name3" field.
func TableName3In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName3, vs...))
}

// TableName3NotIn applies the NotIn predicate on the "table_name3" field.
func TableName3NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName3, vs...))
}

// TableName3GT applies the GT predicate on the "table_name3" field.
func TableName3GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName3, v))
}

// TableName3GTE applies the GTE predicate on the "table_name3" field.
func TableName3GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName3, v))
}

// TableName3LT applies the LT predicate on the "table_name3" field.
func TableName3LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName3, v))
}

// TableName3LTE applies the LTE predicate on the "table_name3" field.
func TableName3LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName3, v))
}

// TableName3Contains applies the Contains predicate on the "table_name3" field.
func TableName3Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName3, v))
}

// TableName3HasPrefix applies the HasPrefix predicate on the "table_name3" field.
func TableName3HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName3, v))
}

// TableName3HasSuffix applies the HasSuffix predicate on the "table_name3" field.
func TableName3HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName3, v))
}

// TableName3EqualFold applies the EqualFold predicate on the "table_name3" field.
func TableName3EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName3, v))
}

// TableName3ContainsFold applies the ContainsFold predicate on the "table_name3" field.
func TableName3ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName3, v))
}

// TableName4EQ applies the EQ predicate on the "table_name4" field.
func TableName4EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName4, v))
}

// TableName4NEQ applies the NEQ predicate on the "table_name4" field.
func TableName4NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName4, v))
}

// TableName4In applies the In predicate on the "table_name4" field.
func TableName4In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName4, vs...))
}

// TableName4NotIn applies the NotIn predicate on the "table_name4" field.
func TableName4NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName4, vs...))
}

// TableName4GT applies the GT predicate on the "table_name4" field.
func TableName4GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName4, v))
}

// TableName4GTE applies the GTE predicate on the "table_name4" field.
func TableName4GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName4, v))
}

// TableName4LT applies the LT predicate on the "table_name4" field.
func TableName4LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName4, v))
}

// TableName4LTE applies the LTE predicate on the "table_name4" field.
func TableName4LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName4, v))
}

// TableName4Contains applies the Contains predicate on the "table_name4" field.
func TableName4Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName4, v))
}

// TableName4HasPrefix applies the HasPrefix predicate on the "table_name4" field.
func TableName4HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName4, v))
}

// TableName4HasSuffix applies the HasSuffix predicate on the "table_name4" field.
func TableName4HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName4, v))
}

// TableName4EqualFold applies the EqualFold predicate on the "table_name4" field.
func TableName4EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName4, v))
}

// TableName4ContainsFold applies the ContainsFold predicate on the "table_name4" field.
func TableName4ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName4, v))
}

// TableName5EQ applies the EQ predicate on the "table_name5" field.
func TableName5EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName5, v))
}

// TableName5NEQ applies the NEQ predicate on the "table_name5" field.
func TableName5NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName5, v))
}

// TableName5In applies the In predicate on the "table_name5" field.
func TableName5In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName5, vs...))
}

// TableName5NotIn applies the NotIn predicate on the "table_name5" field.
func TableName5NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName5, vs...))
}

// TableName5GT applies the GT predicate on the "table_name5" field.
func TableName5GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName5, v))
}

// TableName5GTE applies the GTE predicate on the "table_name5" field.
func TableName5GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName5, v))
}

// TableName5LT applies the LT predicate on the "table_name5" field.
func TableName5LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName5, v))
}

// TableName5LTE applies the LTE predicate on the "table_name5" field.
func TableName5LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName5, v))
}

// TableName5Contains applies the Contains predicate on the "table_name5" field.
func TableName5Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName5, v))
}

// TableName5HasPrefix applies the HasPrefix predicate on the "table_name5" field.
func TableName5HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName5, v))
}

// TableName5HasSuffix applies the HasSuffix predicate on the "table_name5" field.
func TableName5HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName5, v))
}

// TableName5EqualFold applies the EqualFold predicate on the "table_name5" field.
func TableName5EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName5, v))
}

// TableName5ContainsFold applies the ContainsFold predicate on the "table_name5" field.
func TableName5ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName5, v))
}

// TableName6EQ applies the EQ predicate on the "table_name6" field.
func TableName6EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName6, v))
}

// TableName6NEQ applies the NEQ predicate on the "table_name6" field.
func TableName6NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName6, v))
}

// TableName6In applies the In predicate on the "table_name6" field.
func TableName6In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName6, vs...))
}

// TableName6NotIn applies the NotIn predicate on the "table_name6" field.
func TableName6NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName6, vs...))
}

// TableName6GT applies the GT predicate on the "table_name6" field.
func TableName6GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName6, v))
}

// TableName6GTE applies the GTE predicate on the "table_name6" field.
func TableName6GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName6, v))
}

// TableName6LT applies the LT predicate on the "table_name6" field.
func TableName6LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName6, v))
}

// TableName6LTE applies the LTE predicate on the "table_name6" field.
func TableName6LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName6, v))
}

// TableName6Contains applies the Contains predicate on the "table_name6" field.
func TableName6Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName6, v))
}

// TableName6HasPrefix applies the HasPrefix predicate on the "table_name6" field.
func TableName6HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName6, v))
}

// TableName6HasSuffix applies the HasSuffix predicate on the "table_name6" field.
func TableName6HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName6, v))
}

// TableName6EqualFold applies the EqualFold predicate on the "table_name6" field.
func TableName6EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName6, v))
}

// TableName6ContainsFold applies the ContainsFold predicate on the "table_name6" field.
func TableName6ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName6, v))
}

// TableName7EQ applies the EQ predicate on the "table_name7" field.
func TableName7EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName7, v))
}

// TableName7NEQ applies the NEQ predicate on the "table_name7" field.
func TableName7NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName7, v))
}

// TableName7In applies the In predicate on the "table_name7" field.
func TableName7In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName7, vs...))
}

// TableName7NotIn applies the NotIn predicate on the "table_name7" field.
func TableName7NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName7, vs...))
}

// TableName7GT applies the GT predicate on the "table_name7" field.
func TableName7GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName7, v))
}

// TableName7GTE applies the GTE predicate on the "table_name7" field.
func TableName7GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName7, v))
}

// TableName7LT applies the LT predicate on the "table_name7" field.
func TableName7LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName7, v))
}

// TableName7LTE applies the LTE predicate on the "table_name7" field.
func TableName7LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName7, v))
}

// TableName7Contains applies the Contains predicate on the "table_name7" field.
func TableName7Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName7, v))
}

// TableName7HasPrefix applies the HasPrefix predicate on the "table_name7" field.
func TableName7HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName7, v))
}

// TableName7HasSuffix applies the HasSuffix predicate on the "table_name7" field.
func TableName7HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName7, v))
}

// TableName7EqualFold applies the EqualFold predicate on the "table_name7" field.
func TableName7EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName7, v))
}

// TableName7ContainsFold applies the ContainsFold predicate on the "table_name7" field.
func TableName7ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName7, v))
}

// TableName8EQ applies the EQ predicate on the "table_name8" field.
func TableName8EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName8, v))
}

// TableName8NEQ applies the NEQ predicate on the "table_name8" field.
func TableName8NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName8, v))
}

// TableName8In applies the In predicate on the "table_name8" field.
func TableName8In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName8, vs...))
}

// TableName8NotIn applies the NotIn predicate on the "table_name8" field.
func TableName8NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName8, vs...))
}

// TableName8GT applies the GT predicate on the "table_name8" field.
func TableName8GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName8, v))
}

// TableName8GTE applies the GTE predicate on the "table_name8" field.
func TableName8GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName8, v))
}

// TableName8LT applies the LT predicate on the "table_name8" field.
func TableName8LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName8, v))
}

// TableName8LTE applies the LTE predicate on the "table_name8" field.
func TableName8LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName8, v))
}

// TableName8Contains applies the Contains predicate on the "table_name8" field.
func TableName8Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName8, v))
}

// TableName8HasPrefix applies the HasPrefix predicate on the "table_name8" field.
func TableName8HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName8, v))
}

// TableName8HasSuffix applies the HasSuffix predicate on the "table_name8" field.
func TableName8HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName8, v))
}

// TableName8EqualFold applies the EqualFold predicate on the "table_name8" field.
func TableName8EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName8, v))
}

// TableName8ContainsFold applies the ContainsFold predicate on the "table_name8" field.
func TableName8ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName8, v))
}

// TableName9EQ applies the EQ predicate on the "table_name9" field.
func TableName9EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName9, v))
}

// TableName9NEQ applies the NEQ predicate on the "table_name9" field.
func TableName9NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName9, v))
}

// TableName9In applies the In predicate on the "table_name9" field.
func TableName9In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName9, vs...))
}

// TableName9NotIn applies the NotIn predicate on the "table_name9" field.
func TableName9NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName9, vs...))
}

// TableName9GT applies the GT predicate on the "table_name9" field.
func TableName9GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName9, v))
}

// TableName9GTE applies the GTE predicate on the "table_name9" field.
func TableName9GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName9, v))
}

// TableName9LT applies the LT predicate on the "table_name9" field.
func TableName9LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName9, v))
}

// TableName9LTE applies the LTE predicate on the "table_name9" field.
func TableName9LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName9, v))
}

// TableName9Contains applies the Contains predicate on the "table_name9" field.
func TableName9Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName9, v))
}

// TableName9HasPrefix applies the HasPrefix predicate on the "table_name9" field.
func TableName9HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName9, v))
}

// TableName9HasSuffix applies the HasSuffix predicate on the "table_name9" field.
func TableName9HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName9, v))
}

// TableName9EqualFold applies the EqualFold predicate on the "table_name9" field.
func TableName9EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName9, v))
}

// TableName9ContainsFold applies the ContainsFold predicate on the "table_name9" field.
func TableName9ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName9, v))
}

// TableName10EQ applies the EQ predicate on the "table_name10" field.
func TableName10EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName10, v))
}

// TableName10NEQ applies the NEQ predicate on the "table_name10" field.
func TableName10NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName10, v))
}

// TableName10In applies the In predicate on the "table_name10" field.
func TableName10In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName10, vs...))
}

// TableName10NotIn applies the NotIn predicate on the "table_name10" field.
func TableName10NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName10, vs...))
}

// TableName10GT applies the GT predicate on the "table_name10" field.
func TableName10GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName10, v))
}

// TableName10GTE applies the GTE predicate on the "table_name10" field.
func TableName10GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName10, v))
}

// TableName10LT applies the LT predicate on the "table_name10" field.
func TableName10LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName10, v))
}

// TableName10LTE applies the LTE predicate on the "table_name10" field.
func TableName10LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName10, v))
}

// TableName10Contains applies the Contains predicate on the "table_name10" field.
func TableName10Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName10, v))
}

// TableName10HasPrefix applies the HasPrefix predicate on the "table_name10" field.
func TableName10HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName10, v))
}

// TableName10HasSuffix applies the HasSuffix predicate on the "table_name10" field.
func TableName10HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName10, v))
}

// TableName10EqualFold applies the EqualFold predicate on the "table_name10" field.
func TableName10EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName10, v))
}

// TableName10ContainsFold applies the ContainsFold predicate on the "table_name10" field.
func TableName10ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName10, v))
}

// TableName11EQ applies the EQ predicate on the "table_name11" field.
func TableName11EQ(v string) predicate.Product {
	return predicate.Product(sql.FieldEQ(FieldTableName11, v))
}

// TableName11NEQ applies the NEQ predicate on the "table_name11" field.
func TableName11NEQ(v string) predicate.Product {
	return predicate.Product(sql.FieldNEQ(FieldTableName11, v))
}

// TableName11In applies the In predicate on the "table_name11" field.
func TableName11In(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldIn(FieldTableName11, vs...))
}

// TableName11NotIn applies the NotIn predicate on the "table_name11" field.
func TableName11NotIn(vs ...string) predicate.Product {
	return predicate.Product(sql.FieldNotIn(FieldTableName11, vs...))
}

// TableName11GT applies the GT predicate on the "table_name11" field.
func TableName11GT(v string) predicate.Product {
	return predicate.Product(sql.FieldGT(FieldTableName11, v))
}

// TableName11GTE applies the GTE predicate on the "table_name11" field.
func TableName11GTE(v string) predicate.Product {
	return predicate.Product(sql.FieldGTE(FieldTableName11, v))
}

// TableName11LT applies the LT predicate on the "table_name11" field.
func TableName11LT(v string) predicate.Product {
	return predicate.Product(sql.FieldLT(FieldTableName11, v))
}

// TableName11LTE applies the LTE predicate on the "table_name11" field.
func TableName11LTE(v string) predicate.Product {
	return predicate.Product(sql.FieldLTE(FieldTableName11, v))
}

// TableName11Contains applies the Contains predicate on the "table_name11" field.
func TableName11Contains(v string) predicate.Product {
	return predicate.Product(sql.FieldContains(FieldTableName11, v))
}

// TableName11HasPrefix applies the HasPrefix predicate on the "table_name11" field.
func TableName11HasPrefix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasPrefix(FieldTableName11, v))
}

// TableName11HasSuffix applies the HasSuffix predicate on the "table_name11" field.
func TableName11HasSuffix(v string) predicate.Product {
	return predicate.Product(sql.FieldHasSuffix(FieldTableName11, v))
}

// TableName11EqualFold applies the EqualFold predicate on the "table_name11" field.
func TableName11EqualFold(v string) predicate.Product {
	return predicate.Product(sql.FieldEqualFold(FieldTableName11, v))
}

// TableName11ContainsFold applies the ContainsFold predicate on the "table_name11" field.
func TableName11ContainsFold(v string) predicate.Product {
	return predicate.Product(sql.FieldContainsFold(FieldTableName11, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Product) predicate.Product {
	return predicate.Product(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Product) predicate.Product {
	return predicate.Product(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Product) predicate.Product {
	return predicate.Product(func(s *sql.Selector) {
		p(s.Not())
	})
}
