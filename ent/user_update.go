// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"entpoc/ent/predicate"
	"entpoc/ent/user"
	"errors"
	"fmt"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// UserUpdate is the builder for updating User entities.
type UserUpdate struct {
	config
	hooks    []Hook
	mutation *UserMutation
}

// Where appends a list predicates to the UserUpdate builder.
func (uu *UserUpdate) Where(ps ...predicate.User) *UserUpdate {
	uu.mutation.Where(ps...)
	return uu
}

// SetName sets the "name" field.
func (uu *UserUpdate) SetName(s string) *UserUpdate {
	uu.mutation.SetName(s)
	return uu
}

// SetTableName0 sets the "table_name0" field.
func (uu *UserUpdate) SetTableName0(s string) *UserUpdate {
	uu.mutation.SetTableName0(s)
	return uu
}

// SetTableName1 sets the "table_name1" field.
func (uu *UserUpdate) SetTableName1(s string) *UserUpdate {
	uu.mutation.SetTableName1(s)
	return uu
}

// SetTableName2 sets the "table_name2" field.
func (uu *UserUpdate) SetTableName2(i int) *UserUpdate {
	uu.mutation.ResetTableName2()
	uu.mutation.SetTableName2(i)
	return uu
}

// AddTableName2 adds i to the "table_name2" field.
func (uu *UserUpdate) AddTableName2(i int) *UserUpdate {
	uu.mutation.AddTableName2(i)
	return uu
}

// SetTableName3 sets the "table_name3" field.
func (uu *UserUpdate) SetTableName3(s string) *UserUpdate {
	uu.mutation.SetTableName3(s)
	return uu
}

// SetTableName4 sets the "table_name4" field.
func (uu *UserUpdate) SetTableName4(s string) *UserUpdate {
	uu.mutation.SetTableName4(s)
	return uu
}

// SetTableName5 sets the "table_name5" field.
func (uu *UserUpdate) SetTableName5(s string) *UserUpdate {
	uu.mutation.SetTableName5(s)
	return uu
}

// SetTableName6 sets the "table_name6" field.
func (uu *UserUpdate) SetTableName6(s string) *UserUpdate {
	uu.mutation.SetTableName6(s)
	return uu
}

// SetTableName7 sets the "table_name7" field.
func (uu *UserUpdate) SetTableName7(s string) *UserUpdate {
	uu.mutation.SetTableName7(s)
	return uu
}

// SetTableName8 sets the "table_name8" field.
func (uu *UserUpdate) SetTableName8(s string) *UserUpdate {
	uu.mutation.SetTableName8(s)
	return uu
}

// SetTableName9 sets the "table_name9" field.
func (uu *UserUpdate) SetTableName9(s string) *UserUpdate {
	uu.mutation.SetTableName9(s)
	return uu
}

// SetTableName10 sets the "table_name10" field.
func (uu *UserUpdate) SetTableName10(s string) *UserUpdate {
	uu.mutation.SetTableName10(s)
	return uu
}

// SetTableName11 sets the "table_name11" field.
func (uu *UserUpdate) SetTableName11(s string) *UserUpdate {
	uu.mutation.SetTableName11(s)
	return uu
}

// SetTableName12 sets the "table_name12" field.
func (uu *UserUpdate) SetTableName12(s string) *UserUpdate {
	uu.mutation.SetTableName12(s)
	return uu
}

// SetTableName13 sets the "table_name13" field.
func (uu *UserUpdate) SetTableName13(s string) *UserUpdate {
	uu.mutation.SetTableName13(s)
	return uu
}

// SetTableName14 sets the "table_name14" field.
func (uu *UserUpdate) SetTableName14(s string) *UserUpdate {
	uu.mutation.SetTableName14(s)
	return uu
}

// SetTableName15 sets the "table_name15" field.
func (uu *UserUpdate) SetTableName15(s string) *UserUpdate {
	uu.mutation.SetTableName15(s)
	return uu
}

// SetTableName16 sets the "table_name16" field.
func (uu *UserUpdate) SetTableName16(s string) *UserUpdate {
	uu.mutation.SetTableName16(s)
	return uu
}

// SetTableName17 sets the "table_name17" field.
func (uu *UserUpdate) SetTableName17(s string) *UserUpdate {
	uu.mutation.SetTableName17(s)
	return uu
}

// SetTableName18 sets the "table_name18" field.
func (uu *UserUpdate) SetTableName18(s string) *UserUpdate {
	uu.mutation.SetTableName18(s)
	return uu
}

// SetTableName19 sets the "table_name19" field.
func (uu *UserUpdate) SetTableName19(s string) *UserUpdate {
	uu.mutation.SetTableName19(s)
	return uu
}

// SetTableName20 sets the "table_name20" field.
func (uu *UserUpdate) SetTableName20(s string) *UserUpdate {
	uu.mutation.SetTableName20(s)
	return uu
}

// SetTableName21 sets the "table_name21" field.
func (uu *UserUpdate) SetTableName21(s string) *UserUpdate {
	uu.mutation.SetTableName21(s)
	return uu
}

// SetTableName22 sets the "table_name22" field.
func (uu *UserUpdate) SetTableName22(s string) *UserUpdate {
	uu.mutation.SetTableName22(s)
	return uu
}

// SetTableName23 sets the "table_name23" field.
func (uu *UserUpdate) SetTableName23(s string) *UserUpdate {
	uu.mutation.SetTableName23(s)
	return uu
}

// SetTableName24 sets the "table_name24" field.
func (uu *UserUpdate) SetTableName24(s string) *UserUpdate {
	uu.mutation.SetTableName24(s)
	return uu
}

// SetTableName25 sets the "table_name25" field.
func (uu *UserUpdate) SetTableName25(s string) *UserUpdate {
	uu.mutation.SetTableName25(s)
	return uu
}

// SetTableName26 sets the "table_name26" field.
func (uu *UserUpdate) SetTableName26(s string) *UserUpdate {
	uu.mutation.SetTableName26(s)
	return uu
}

// SetTableName27 sets the "table_name27" field.
func (uu *UserUpdate) SetTableName27(s string) *UserUpdate {
	uu.mutation.SetTableName27(s)
	return uu
}

// SetTableName28 sets the "table_name28" field.
func (uu *UserUpdate) SetTableName28(s string) *UserUpdate {
	uu.mutation.SetTableName28(s)
	return uu
}

// SetTableName29 sets the "table_name29" field.
func (uu *UserUpdate) SetTableName29(s string) *UserUpdate {
	uu.mutation.SetTableName29(s)
	return uu
}

// SetTableName30 sets the "table_name30" field.
func (uu *UserUpdate) SetTableName30(s string) *UserUpdate {
	uu.mutation.SetTableName30(s)
	return uu
}

// SetTableName31 sets the "table_name31" field.
func (uu *UserUpdate) SetTableName31(s string) *UserUpdate {
	uu.mutation.SetTableName31(s)
	return uu
}

// SetTableName32 sets the "table_name32" field.
func (uu *UserUpdate) SetTableName32(s string) *UserUpdate {
	uu.mutation.SetTableName32(s)
	return uu
}

// SetTableName33 sets the "table_name33" field.
func (uu *UserUpdate) SetTableName33(s string) *UserUpdate {
	uu.mutation.SetTableName33(s)
	return uu
}

// SetTableName34 sets the "table_name34" field.
func (uu *UserUpdate) SetTableName34(s string) *UserUpdate {
	uu.mutation.SetTableName34(s)
	return uu
}

// SetTableName35 sets the "table_name35" field.
func (uu *UserUpdate) SetTableName35(s string) *UserUpdate {
	uu.mutation.SetTableName35(s)
	return uu
}

// SetTableName36 sets the "table_name36" field.
func (uu *UserUpdate) SetTableName36(s string) *UserUpdate {
	uu.mutation.SetTableName36(s)
	return uu
}

// SetTableName37 sets the "table_name37" field.
func (uu *UserUpdate) SetTableName37(s string) *UserUpdate {
	uu.mutation.SetTableName37(s)
	return uu
}

// SetTableName38 sets the "table_name38" field.
func (uu *UserUpdate) SetTableName38(s string) *UserUpdate {
	uu.mutation.SetTableName38(s)
	return uu
}

// SetTableName39 sets the "table_name39" field.
func (uu *UserUpdate) SetTableName39(s string) *UserUpdate {
	uu.mutation.SetTableName39(s)
	return uu
}

// SetTableName40 sets the "table_name40" field.
func (uu *UserUpdate) SetTableName40(s string) *UserUpdate {
	uu.mutation.SetTableName40(s)
	return uu
}

// SetTableName41 sets the "table_name41" field.
func (uu *UserUpdate) SetTableName41(s string) *UserUpdate {
	uu.mutation.SetTableName41(s)
	return uu
}

// SetTableName42 sets the "table_name42" field.
func (uu *UserUpdate) SetTableName42(s string) *UserUpdate {
	uu.mutation.SetTableName42(s)
	return uu
}

// SetAlteredTableName43 sets the "altered_table_name43" field.
func (uu *UserUpdate) SetAlteredTableName43(s string) *UserUpdate {
	uu.mutation.SetAlteredTableName43(s)
	return uu
}

// SetTableName44 sets the "table_name44" field.
func (uu *UserUpdate) SetTableName44(s string) *UserUpdate {
	uu.mutation.SetTableName44(s)
	return uu
}

// SetTableName45 sets the "table_name45" field.
func (uu *UserUpdate) SetTableName45(s string) *UserUpdate {
	uu.mutation.SetTableName45(s)
	return uu
}

// SetTableName46 sets the "table_name46" field.
func (uu *UserUpdate) SetTableName46(s string) *UserUpdate {
	uu.mutation.SetTableName46(s)
	return uu
}

// SetTableName47 sets the "table_name47" field.
func (uu *UserUpdate) SetTableName47(s string) *UserUpdate {
	uu.mutation.SetTableName47(s)
	return uu
}

// SetTableName48 sets the "table_name48" field.
func (uu *UserUpdate) SetTableName48(s string) *UserUpdate {
	uu.mutation.SetTableName48(s)
	return uu
}

// SetTableName49 sets the "table_name49" field.
func (uu *UserUpdate) SetTableName49(s string) *UserUpdate {
	uu.mutation.SetTableName49(s)
	return uu
}

// SetAlteredTableName50 sets the "altered_table_name50" field.
func (uu *UserUpdate) SetAlteredTableName50(s string) *UserUpdate {
	uu.mutation.SetAlteredTableName50(s)
	return uu
}

// Mutation returns the UserMutation object of the builder.
func (uu *UserUpdate) Mutation() *UserMutation {
	return uu.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (uu *UserUpdate) Save(ctx context.Context) (int, error) {
	return withHooks(ctx, uu.sqlSave, uu.mutation, uu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (uu *UserUpdate) SaveX(ctx context.Context) int {
	affected, err := uu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (uu *UserUpdate) Exec(ctx context.Context) error {
	_, err := uu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (uu *UserUpdate) ExecX(ctx context.Context) {
	if err := uu.Exec(ctx); err != nil {
		panic(err)
	}
}

func (uu *UserUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := sqlgraph.NewUpdateSpec(user.Table, user.Columns, sqlgraph.NewFieldSpec(user.FieldID, field.TypeInt))
	if ps := uu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := uu.mutation.Name(); ok {
		_spec.SetField(user.FieldName, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName0(); ok {
		_spec.SetField(user.FieldTableName0, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName1(); ok {
		_spec.SetField(user.FieldTableName1, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName2(); ok {
		_spec.SetField(user.FieldTableName2, field.TypeInt, value)
	}
	if value, ok := uu.mutation.AddedTableName2(); ok {
		_spec.AddField(user.FieldTableName2, field.TypeInt, value)
	}
	if value, ok := uu.mutation.TableName3(); ok {
		_spec.SetField(user.FieldTableName3, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName4(); ok {
		_spec.SetField(user.FieldTableName4, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName5(); ok {
		_spec.SetField(user.FieldTableName5, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName6(); ok {
		_spec.SetField(user.FieldTableName6, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName7(); ok {
		_spec.SetField(user.FieldTableName7, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName8(); ok {
		_spec.SetField(user.FieldTableName8, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName9(); ok {
		_spec.SetField(user.FieldTableName9, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName10(); ok {
		_spec.SetField(user.FieldTableName10, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName11(); ok {
		_spec.SetField(user.FieldTableName11, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName12(); ok {
		_spec.SetField(user.FieldTableName12, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName13(); ok {
		_spec.SetField(user.FieldTableName13, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName14(); ok {
		_spec.SetField(user.FieldTableName14, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName15(); ok {
		_spec.SetField(user.FieldTableName15, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName16(); ok {
		_spec.SetField(user.FieldTableName16, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName17(); ok {
		_spec.SetField(user.FieldTableName17, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName18(); ok {
		_spec.SetField(user.FieldTableName18, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName19(); ok {
		_spec.SetField(user.FieldTableName19, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName20(); ok {
		_spec.SetField(user.FieldTableName20, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName21(); ok {
		_spec.SetField(user.FieldTableName21, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName22(); ok {
		_spec.SetField(user.FieldTableName22, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName23(); ok {
		_spec.SetField(user.FieldTableName23, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName24(); ok {
		_spec.SetField(user.FieldTableName24, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName25(); ok {
		_spec.SetField(user.FieldTableName25, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName26(); ok {
		_spec.SetField(user.FieldTableName26, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName27(); ok {
		_spec.SetField(user.FieldTableName27, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName28(); ok {
		_spec.SetField(user.FieldTableName28, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName29(); ok {
		_spec.SetField(user.FieldTableName29, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName30(); ok {
		_spec.SetField(user.FieldTableName30, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName31(); ok {
		_spec.SetField(user.FieldTableName31, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName32(); ok {
		_spec.SetField(user.FieldTableName32, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName33(); ok {
		_spec.SetField(user.FieldTableName33, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName34(); ok {
		_spec.SetField(user.FieldTableName34, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName35(); ok {
		_spec.SetField(user.FieldTableName35, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName36(); ok {
		_spec.SetField(user.FieldTableName36, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName37(); ok {
		_spec.SetField(user.FieldTableName37, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName38(); ok {
		_spec.SetField(user.FieldTableName38, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName39(); ok {
		_spec.SetField(user.FieldTableName39, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName40(); ok {
		_spec.SetField(user.FieldTableName40, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName41(); ok {
		_spec.SetField(user.FieldTableName41, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName42(); ok {
		_spec.SetField(user.FieldTableName42, field.TypeString, value)
	}
	if value, ok := uu.mutation.AlteredTableName43(); ok {
		_spec.SetField(user.FieldAlteredTableName43, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName44(); ok {
		_spec.SetField(user.FieldTableName44, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName45(); ok {
		_spec.SetField(user.FieldTableName45, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName46(); ok {
		_spec.SetField(user.FieldTableName46, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName47(); ok {
		_spec.SetField(user.FieldTableName47, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName48(); ok {
		_spec.SetField(user.FieldTableName48, field.TypeString, value)
	}
	if value, ok := uu.mutation.TableName49(); ok {
		_spec.SetField(user.FieldTableName49, field.TypeString, value)
	}
	if value, ok := uu.mutation.AlteredTableName50(); ok {
		_spec.SetField(user.FieldAlteredTableName50, field.TypeString, value)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, uu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{user.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	uu.mutation.done = true
	return n, nil
}

// UserUpdateOne is the builder for updating a single User entity.
type UserUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *UserMutation
}

// SetName sets the "name" field.
func (uuo *UserUpdateOne) SetName(s string) *UserUpdateOne {
	uuo.mutation.SetName(s)
	return uuo
}

// SetTableName0 sets the "table_name0" field.
func (uuo *UserUpdateOne) SetTableName0(s string) *UserUpdateOne {
	uuo.mutation.SetTableName0(s)
	return uuo
}

// SetTableName1 sets the "table_name1" field.
func (uuo *UserUpdateOne) SetTableName1(s string) *UserUpdateOne {
	uuo.mutation.SetTableName1(s)
	return uuo
}

// SetTableName2 sets the "table_name2" field.
func (uuo *UserUpdateOne) SetTableName2(i int) *UserUpdateOne {
	uuo.mutation.ResetTableName2()
	uuo.mutation.SetTableName2(i)
	return uuo
}

// AddTableName2 adds i to the "table_name2" field.
func (uuo *UserUpdateOne) AddTableName2(i int) *UserUpdateOne {
	uuo.mutation.AddTableName2(i)
	return uuo
}

// SetTableName3 sets the "table_name3" field.
func (uuo *UserUpdateOne) SetTableName3(s string) *UserUpdateOne {
	uuo.mutation.SetTableName3(s)
	return uuo
}

// SetTableName4 sets the "table_name4" field.
func (uuo *UserUpdateOne) SetTableName4(s string) *UserUpdateOne {
	uuo.mutation.SetTableName4(s)
	return uuo
}

// SetTableName5 sets the "table_name5" field.
func (uuo *UserUpdateOne) SetTableName5(s string) *UserUpdateOne {
	uuo.mutation.SetTableName5(s)
	return uuo
}

// SetTableName6 sets the "table_name6" field.
func (uuo *UserUpdateOne) SetTableName6(s string) *UserUpdateOne {
	uuo.mutation.SetTableName6(s)
	return uuo
}

// SetTableName7 sets the "table_name7" field.
func (uuo *UserUpdateOne) SetTableName7(s string) *UserUpdateOne {
	uuo.mutation.SetTableName7(s)
	return uuo
}

// SetTableName8 sets the "table_name8" field.
func (uuo *UserUpdateOne) SetTableName8(s string) *UserUpdateOne {
	uuo.mutation.SetTableName8(s)
	return uuo
}

// SetTableName9 sets the "table_name9" field.
func (uuo *UserUpdateOne) SetTableName9(s string) *UserUpdateOne {
	uuo.mutation.SetTableName9(s)
	return uuo
}

// SetTableName10 sets the "table_name10" field.
func (uuo *UserUpdateOne) SetTableName10(s string) *UserUpdateOne {
	uuo.mutation.SetTableName10(s)
	return uuo
}

// SetTableName11 sets the "table_name11" field.
func (uuo *UserUpdateOne) SetTableName11(s string) *UserUpdateOne {
	uuo.mutation.SetTableName11(s)
	return uuo
}

// SetTableName12 sets the "table_name12" field.
func (uuo *UserUpdateOne) SetTableName12(s string) *UserUpdateOne {
	uuo.mutation.SetTableName12(s)
	return uuo
}

// SetTableName13 sets the "table_name13" field.
func (uuo *UserUpdateOne) SetTableName13(s string) *UserUpdateOne {
	uuo.mutation.SetTableName13(s)
	return uuo
}

// SetTableName14 sets the "table_name14" field.
func (uuo *UserUpdateOne) SetTableName14(s string) *UserUpdateOne {
	uuo.mutation.SetTableName14(s)
	return uuo
}

// SetTableName15 sets the "table_name15" field.
func (uuo *UserUpdateOne) SetTableName15(s string) *UserUpdateOne {
	uuo.mutation.SetTableName15(s)
	return uuo
}

// SetTableName16 sets the "table_name16" field.
func (uuo *UserUpdateOne) SetTableName16(s string) *UserUpdateOne {
	uuo.mutation.SetTableName16(s)
	return uuo
}

// SetTableName17 sets the "table_name17" field.
func (uuo *UserUpdateOne) SetTableName17(s string) *UserUpdateOne {
	uuo.mutation.SetTableName17(s)
	return uuo
}

// SetTableName18 sets the "table_name18" field.
func (uuo *UserUpdateOne) SetTableName18(s string) *UserUpdateOne {
	uuo.mutation.SetTableName18(s)
	return uuo
}

// SetTableName19 sets the "table_name19" field.
func (uuo *UserUpdateOne) SetTableName19(s string) *UserUpdateOne {
	uuo.mutation.SetTableName19(s)
	return uuo
}

// SetTableName20 sets the "table_name20" field.
func (uuo *UserUpdateOne) SetTableName20(s string) *UserUpdateOne {
	uuo.mutation.SetTableName20(s)
	return uuo
}

// SetTableName21 sets the "table_name21" field.
func (uuo *UserUpdateOne) SetTableName21(s string) *UserUpdateOne {
	uuo.mutation.SetTableName21(s)
	return uuo
}

// SetTableName22 sets the "table_name22" field.
func (uuo *UserUpdateOne) SetTableName22(s string) *UserUpdateOne {
	uuo.mutation.SetTableName22(s)
	return uuo
}

// SetTableName23 sets the "table_name23" field.
func (uuo *UserUpdateOne) SetTableName23(s string) *UserUpdateOne {
	uuo.mutation.SetTableName23(s)
	return uuo
}

// SetTableName24 sets the "table_name24" field.
func (uuo *UserUpdateOne) SetTableName24(s string) *UserUpdateOne {
	uuo.mutation.SetTableName24(s)
	return uuo
}

// SetTableName25 sets the "table_name25" field.
func (uuo *UserUpdateOne) SetTableName25(s string) *UserUpdateOne {
	uuo.mutation.SetTableName25(s)
	return uuo
}

// SetTableName26 sets the "table_name26" field.
func (uuo *UserUpdateOne) SetTableName26(s string) *UserUpdateOne {
	uuo.mutation.SetTableName26(s)
	return uuo
}

// SetTableName27 sets the "table_name27" field.
func (uuo *UserUpdateOne) SetTableName27(s string) *UserUpdateOne {
	uuo.mutation.SetTableName27(s)
	return uuo
}

// SetTableName28 sets the "table_name28" field.
func (uuo *UserUpdateOne) SetTableName28(s string) *UserUpdateOne {
	uuo.mutation.SetTableName28(s)
	return uuo
}

// SetTableName29 sets the "table_name29" field.
func (uuo *UserUpdateOne) SetTableName29(s string) *UserUpdateOne {
	uuo.mutation.SetTableName29(s)
	return uuo
}

// SetTableName30 sets the "table_name30" field.
func (uuo *UserUpdateOne) SetTableName30(s string) *UserUpdateOne {
	uuo.mutation.SetTableName30(s)
	return uuo
}

// SetTableName31 sets the "table_name31" field.
func (uuo *UserUpdateOne) SetTableName31(s string) *UserUpdateOne {
	uuo.mutation.SetTableName31(s)
	return uuo
}

// SetTableName32 sets the "table_name32" field.
func (uuo *UserUpdateOne) SetTableName32(s string) *UserUpdateOne {
	uuo.mutation.SetTableName32(s)
	return uuo
}

// SetTableName33 sets the "table_name33" field.
func (uuo *UserUpdateOne) SetTableName33(s string) *UserUpdateOne {
	uuo.mutation.SetTableName33(s)
	return uuo
}

// SetTableName34 sets the "table_name34" field.
func (uuo *UserUpdateOne) SetTableName34(s string) *UserUpdateOne {
	uuo.mutation.SetTableName34(s)
	return uuo
}

// SetTableName35 sets the "table_name35" field.
func (uuo *UserUpdateOne) SetTableName35(s string) *UserUpdateOne {
	uuo.mutation.SetTableName35(s)
	return uuo
}

// SetTableName36 sets the "table_name36" field.
func (uuo *UserUpdateOne) SetTableName36(s string) *UserUpdateOne {
	uuo.mutation.SetTableName36(s)
	return uuo
}

// SetTableName37 sets the "table_name37" field.
func (uuo *UserUpdateOne) SetTableName37(s string) *UserUpdateOne {
	uuo.mutation.SetTableName37(s)
	return uuo
}

// SetTableName38 sets the "table_name38" field.
func (uuo *UserUpdateOne) SetTableName38(s string) *UserUpdateOne {
	uuo.mutation.SetTableName38(s)
	return uuo
}

// SetTableName39 sets the "table_name39" field.
func (uuo *UserUpdateOne) SetTableName39(s string) *UserUpdateOne {
	uuo.mutation.SetTableName39(s)
	return uuo
}

// SetTableName40 sets the "table_name40" field.
func (uuo *UserUpdateOne) SetTableName40(s string) *UserUpdateOne {
	uuo.mutation.SetTableName40(s)
	return uuo
}

// SetTableName41 sets the "table_name41" field.
func (uuo *UserUpdateOne) SetTableName41(s string) *UserUpdateOne {
	uuo.mutation.SetTableName41(s)
	return uuo
}

// SetTableName42 sets the "table_name42" field.
func (uuo *UserUpdateOne) SetTableName42(s string) *UserUpdateOne {
	uuo.mutation.SetTableName42(s)
	return uuo
}

// SetAlteredTableName43 sets the "altered_table_name43" field.
func (uuo *UserUpdateOne) SetAlteredTableName43(s string) *UserUpdateOne {
	uuo.mutation.SetAlteredTableName43(s)
	return uuo
}

// SetTableName44 sets the "table_name44" field.
func (uuo *UserUpdateOne) SetTableName44(s string) *UserUpdateOne {
	uuo.mutation.SetTableName44(s)
	return uuo
}

// SetTableName45 sets the "table_name45" field.
func (uuo *UserUpdateOne) SetTableName45(s string) *UserUpdateOne {
	uuo.mutation.SetTableName45(s)
	return uuo
}

// SetTableName46 sets the "table_name46" field.
func (uuo *UserUpdateOne) SetTableName46(s string) *UserUpdateOne {
	uuo.mutation.SetTableName46(s)
	return uuo
}

// SetTableName47 sets the "table_name47" field.
func (uuo *UserUpdateOne) SetTableName47(s string) *UserUpdateOne {
	uuo.mutation.SetTableName47(s)
	return uuo
}

// SetTableName48 sets the "table_name48" field.
func (uuo *UserUpdateOne) SetTableName48(s string) *UserUpdateOne {
	uuo.mutation.SetTableName48(s)
	return uuo
}

// SetTableName49 sets the "table_name49" field.
func (uuo *UserUpdateOne) SetTableName49(s string) *UserUpdateOne {
	uuo.mutation.SetTableName49(s)
	return uuo
}

// SetAlteredTableName50 sets the "altered_table_name50" field.
func (uuo *UserUpdateOne) SetAlteredTableName50(s string) *UserUpdateOne {
	uuo.mutation.SetAlteredTableName50(s)
	return uuo
}

// Mutation returns the UserMutation object of the builder.
func (uuo *UserUpdateOne) Mutation() *UserMutation {
	return uuo.mutation
}

// Where appends a list predicates to the UserUpdate builder.
func (uuo *UserUpdateOne) Where(ps ...predicate.User) *UserUpdateOne {
	uuo.mutation.Where(ps...)
	return uuo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (uuo *UserUpdateOne) Select(field string, fields ...string) *UserUpdateOne {
	uuo.fields = append([]string{field}, fields...)
	return uuo
}

// Save executes the query and returns the updated User entity.
func (uuo *UserUpdateOne) Save(ctx context.Context) (*User, error) {
	return withHooks(ctx, uuo.sqlSave, uuo.mutation, uuo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (uuo *UserUpdateOne) SaveX(ctx context.Context) *User {
	node, err := uuo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (uuo *UserUpdateOne) Exec(ctx context.Context) error {
	_, err := uuo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (uuo *UserUpdateOne) ExecX(ctx context.Context) {
	if err := uuo.Exec(ctx); err != nil {
		panic(err)
	}
}

func (uuo *UserUpdateOne) sqlSave(ctx context.Context) (_node *User, err error) {
	_spec := sqlgraph.NewUpdateSpec(user.Table, user.Columns, sqlgraph.NewFieldSpec(user.FieldID, field.TypeInt))
	id, ok := uuo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "User.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := uuo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, user.FieldID)
		for _, f := range fields {
			if !user.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != user.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := uuo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := uuo.mutation.Name(); ok {
		_spec.SetField(user.FieldName, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName0(); ok {
		_spec.SetField(user.FieldTableName0, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName1(); ok {
		_spec.SetField(user.FieldTableName1, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName2(); ok {
		_spec.SetField(user.FieldTableName2, field.TypeInt, value)
	}
	if value, ok := uuo.mutation.AddedTableName2(); ok {
		_spec.AddField(user.FieldTableName2, field.TypeInt, value)
	}
	if value, ok := uuo.mutation.TableName3(); ok {
		_spec.SetField(user.FieldTableName3, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName4(); ok {
		_spec.SetField(user.FieldTableName4, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName5(); ok {
		_spec.SetField(user.FieldTableName5, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName6(); ok {
		_spec.SetField(user.FieldTableName6, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName7(); ok {
		_spec.SetField(user.FieldTableName7, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName8(); ok {
		_spec.SetField(user.FieldTableName8, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName9(); ok {
		_spec.SetField(user.FieldTableName9, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName10(); ok {
		_spec.SetField(user.FieldTableName10, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName11(); ok {
		_spec.SetField(user.FieldTableName11, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName12(); ok {
		_spec.SetField(user.FieldTableName12, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName13(); ok {
		_spec.SetField(user.FieldTableName13, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName14(); ok {
		_spec.SetField(user.FieldTableName14, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName15(); ok {
		_spec.SetField(user.FieldTableName15, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName16(); ok {
		_spec.SetField(user.FieldTableName16, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName17(); ok {
		_spec.SetField(user.FieldTableName17, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName18(); ok {
		_spec.SetField(user.FieldTableName18, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName19(); ok {
		_spec.SetField(user.FieldTableName19, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName20(); ok {
		_spec.SetField(user.FieldTableName20, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName21(); ok {
		_spec.SetField(user.FieldTableName21, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName22(); ok {
		_spec.SetField(user.FieldTableName22, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName23(); ok {
		_spec.SetField(user.FieldTableName23, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName24(); ok {
		_spec.SetField(user.FieldTableName24, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName25(); ok {
		_spec.SetField(user.FieldTableName25, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName26(); ok {
		_spec.SetField(user.FieldTableName26, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName27(); ok {
		_spec.SetField(user.FieldTableName27, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName28(); ok {
		_spec.SetField(user.FieldTableName28, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName29(); ok {
		_spec.SetField(user.FieldTableName29, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName30(); ok {
		_spec.SetField(user.FieldTableName30, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName31(); ok {
		_spec.SetField(user.FieldTableName31, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName32(); ok {
		_spec.SetField(user.FieldTableName32, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName33(); ok {
		_spec.SetField(user.FieldTableName33, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName34(); ok {
		_spec.SetField(user.FieldTableName34, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName35(); ok {
		_spec.SetField(user.FieldTableName35, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName36(); ok {
		_spec.SetField(user.FieldTableName36, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName37(); ok {
		_spec.SetField(user.FieldTableName37, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName38(); ok {
		_spec.SetField(user.FieldTableName38, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName39(); ok {
		_spec.SetField(user.FieldTableName39, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName40(); ok {
		_spec.SetField(user.FieldTableName40, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName41(); ok {
		_spec.SetField(user.FieldTableName41, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName42(); ok {
		_spec.SetField(user.FieldTableName42, field.TypeString, value)
	}
	if value, ok := uuo.mutation.AlteredTableName43(); ok {
		_spec.SetField(user.FieldAlteredTableName43, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName44(); ok {
		_spec.SetField(user.FieldTableName44, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName45(); ok {
		_spec.SetField(user.FieldTableName45, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName46(); ok {
		_spec.SetField(user.FieldTableName46, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName47(); ok {
		_spec.SetField(user.FieldTableName47, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName48(); ok {
		_spec.SetField(user.FieldTableName48, field.TypeString, value)
	}
	if value, ok := uuo.mutation.TableName49(); ok {
		_spec.SetField(user.FieldTableName49, field.TypeString, value)
	}
	if value, ok := uuo.mutation.AlteredTableName50(); ok {
		_spec.SetField(user.FieldAlteredTableName50, field.TypeString, value)
	}
	_node = &User{config: uuo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, uuo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{user.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	uuo.mutation.done = true
	return _node, nil
}
