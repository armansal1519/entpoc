// Code generated by ent, DO NOT EDIT.

package user

import (
	"entpoc/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.User {
	return predicate.User(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.User {
	return predicate.User(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.User {
	return predicate.User(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.User {
	return predicate.User(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.User {
	return predicate.User(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.User {
	return predicate.User(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.User {
	return predicate.User(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldName, v))
}

// TableName0 applies equality check predicate on the "table_name0" field. It's identical to TableName0EQ.
func TableName0(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName0, v))
}

// TableName1 applies equality check predicate on the "table_name1" field. It's identical to TableName1EQ.
func TableName1(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName1, v))
}

// TableName2 applies equality check predicate on the "table_name2" field. It's identical to TableName2EQ.
func TableName2(v int) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName2, v))
}

// TableName3 applies equality check predicate on the "table_name3" field. It's identical to TableName3EQ.
func TableName3(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName3, v))
}

// TableName4 applies equality check predicate on the "table_name4" field. It's identical to TableName4EQ.
func TableName4(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName4, v))
}

// TableName5 applies equality check predicate on the "table_name5" field. It's identical to TableName5EQ.
func TableName5(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName5, v))
}

// TableName6 applies equality check predicate on the "table_name6" field. It's identical to TableName6EQ.
func TableName6(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName6, v))
}

// TableName7 applies equality check predicate on the "table_name7" field. It's identical to TableName7EQ.
func TableName7(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName7, v))
}

// TableName8 applies equality check predicate on the "table_name8" field. It's identical to TableName8EQ.
func TableName8(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName8, v))
}

// TableName9 applies equality check predicate on the "table_name9" field. It's identical to TableName9EQ.
func TableName9(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName9, v))
}

// TableName10 applies equality check predicate on the "table_name10" field. It's identical to TableName10EQ.
func TableName10(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName10, v))
}

// TableName11 applies equality check predicate on the "table_name11" field. It's identical to TableName11EQ.
func TableName11(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName11, v))
}

// TableName12 applies equality check predicate on the "table_name12" field. It's identical to TableName12EQ.
func TableName12(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName12, v))
}

// TableName13 applies equality check predicate on the "table_name13" field. It's identical to TableName13EQ.
func TableName13(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName13, v))
}

// TableName14 applies equality check predicate on the "table_name14" field. It's identical to TableName14EQ.
func TableName14(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName14, v))
}

// TableName15 applies equality check predicate on the "table_name15" field. It's identical to TableName15EQ.
func TableName15(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName15, v))
}

// TableName16 applies equality check predicate on the "table_name16" field. It's identical to TableName16EQ.
func TableName16(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName16, v))
}

// TableName17 applies equality check predicate on the "table_name17" field. It's identical to TableName17EQ.
func TableName17(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName17, v))
}

// TableName18 applies equality check predicate on the "table_name18" field. It's identical to TableName18EQ.
func TableName18(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName18, v))
}

// TableName19 applies equality check predicate on the "table_name19" field. It's identical to TableName19EQ.
func TableName19(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName19, v))
}

// TableName20 applies equality check predicate on the "table_name20" field. It's identical to TableName20EQ.
func TableName20(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName20, v))
}

// TableName21 applies equality check predicate on the "table_name21" field. It's identical to TableName21EQ.
func TableName21(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName21, v))
}

// TableName22 applies equality check predicate on the "table_name22" field. It's identical to TableName22EQ.
func TableName22(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName22, v))
}

// TableName23 applies equality check predicate on the "table_name23" field. It's identical to TableName23EQ.
func TableName23(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName23, v))
}

// TableName24 applies equality check predicate on the "table_name24" field. It's identical to TableName24EQ.
func TableName24(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName24, v))
}

// TableName25 applies equality check predicate on the "table_name25" field. It's identical to TableName25EQ.
func TableName25(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName25, v))
}

// TableName26 applies equality check predicate on the "table_name26" field. It's identical to TableName26EQ.
func TableName26(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName26, v))
}

// TableName27 applies equality check predicate on the "table_name27" field. It's identical to TableName27EQ.
func TableName27(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName27, v))
}

// TableName28 applies equality check predicate on the "table_name28" field. It's identical to TableName28EQ.
func TableName28(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName28, v))
}

// TableName29 applies equality check predicate on the "table_name29" field. It's identical to TableName29EQ.
func TableName29(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName29, v))
}

// TableName30 applies equality check predicate on the "table_name30" field. It's identical to TableName30EQ.
func TableName30(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName30, v))
}

// TableName31 applies equality check predicate on the "table_name31" field. It's identical to TableName31EQ.
func TableName31(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName31, v))
}

// TableName32 applies equality check predicate on the "table_name32" field. It's identical to TableName32EQ.
func TableName32(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName32, v))
}

// TableName33 applies equality check predicate on the "table_name33" field. It's identical to TableName33EQ.
func TableName33(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName33, v))
}

// TableName34 applies equality check predicate on the "table_name34" field. It's identical to TableName34EQ.
func TableName34(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName34, v))
}

// TableName35 applies equality check predicate on the "table_name35" field. It's identical to TableName35EQ.
func TableName35(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName35, v))
}

// TableName36 applies equality check predicate on the "table_name36" field. It's identical to TableName36EQ.
func TableName36(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName36, v))
}

// TableName37 applies equality check predicate on the "table_name37" field. It's identical to TableName37EQ.
func TableName37(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName37, v))
}

// TableName38 applies equality check predicate on the "table_name38" field. It's identical to TableName38EQ.
func TableName38(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName38, v))
}

// TableName39 applies equality check predicate on the "table_name39" field. It's identical to TableName39EQ.
func TableName39(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName39, v))
}

// TableName40 applies equality check predicate on the "table_name40" field. It's identical to TableName40EQ.
func TableName40(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName40, v))
}

// TableName41 applies equality check predicate on the "table_name41" field. It's identical to TableName41EQ.
func TableName41(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName41, v))
}

// TableName42 applies equality check predicate on the "table_name42" field. It's identical to TableName42EQ.
func TableName42(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName42, v))
}

// AlteredTableName43 applies equality check predicate on the "altered_table_name43" field. It's identical to AlteredTableName43EQ.
func AlteredTableName43(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldAlteredTableName43, v))
}

// TableName44 applies equality check predicate on the "table_name44" field. It's identical to TableName44EQ.
func TableName44(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName44, v))
}

// TableName45 applies equality check predicate on the "table_name45" field. It's identical to TableName45EQ.
func TableName45(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName45, v))
}

// TableName46 applies equality check predicate on the "table_name46" field. It's identical to TableName46EQ.
func TableName46(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName46, v))
}

// TableName47 applies equality check predicate on the "table_name47" field. It's identical to TableName47EQ.
func TableName47(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName47, v))
}

// TableName48 applies equality check predicate on the "table_name48" field. It's identical to TableName48EQ.
func TableName48(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName48, v))
}

// TableName49 applies equality check predicate on the "table_name49" field. It's identical to TableName49EQ.
func TableName49(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName49, v))
}

// AlteredTableName50 applies equality check predicate on the "altered_table_name50" field. It's identical to AlteredTableName50EQ.
func AlteredTableName50(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldAlteredTableName50, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldName, v))
}

// TableName0EQ applies the EQ predicate on the "table_name0" field.
func TableName0EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName0, v))
}

// TableName0NEQ applies the NEQ predicate on the "table_name0" field.
func TableName0NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName0, v))
}

// TableName0In applies the In predicate on the "table_name0" field.
func TableName0In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName0, vs...))
}

// TableName0NotIn applies the NotIn predicate on the "table_name0" field.
func TableName0NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName0, vs...))
}

// TableName0GT applies the GT predicate on the "table_name0" field.
func TableName0GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName0, v))
}

// TableName0GTE applies the GTE predicate on the "table_name0" field.
func TableName0GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName0, v))
}

// TableName0LT applies the LT predicate on the "table_name0" field.
func TableName0LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName0, v))
}

// TableName0LTE applies the LTE predicate on the "table_name0" field.
func TableName0LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName0, v))
}

// TableName0Contains applies the Contains predicate on the "table_name0" field.
func TableName0Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName0, v))
}

// TableName0HasPrefix applies the HasPrefix predicate on the "table_name0" field.
func TableName0HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName0, v))
}

// TableName0HasSuffix applies the HasSuffix predicate on the "table_name0" field.
func TableName0HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName0, v))
}

// TableName0EqualFold applies the EqualFold predicate on the "table_name0" field.
func TableName0EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName0, v))
}

// TableName0ContainsFold applies the ContainsFold predicate on the "table_name0" field.
func TableName0ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName0, v))
}

// TableName1EQ applies the EQ predicate on the "table_name1" field.
func TableName1EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName1, v))
}

// TableName1NEQ applies the NEQ predicate on the "table_name1" field.
func TableName1NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName1, v))
}

// TableName1In applies the In predicate on the "table_name1" field.
func TableName1In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName1, vs...))
}

// TableName1NotIn applies the NotIn predicate on the "table_name1" field.
func TableName1NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName1, vs...))
}

// TableName1GT applies the GT predicate on the "table_name1" field.
func TableName1GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName1, v))
}

// TableName1GTE applies the GTE predicate on the "table_name1" field.
func TableName1GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName1, v))
}

// TableName1LT applies the LT predicate on the "table_name1" field.
func TableName1LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName1, v))
}

// TableName1LTE applies the LTE predicate on the "table_name1" field.
func TableName1LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName1, v))
}

// TableName1Contains applies the Contains predicate on the "table_name1" field.
func TableName1Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName1, v))
}

// TableName1HasPrefix applies the HasPrefix predicate on the "table_name1" field.
func TableName1HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName1, v))
}

// TableName1HasSuffix applies the HasSuffix predicate on the "table_name1" field.
func TableName1HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName1, v))
}

// TableName1EqualFold applies the EqualFold predicate on the "table_name1" field.
func TableName1EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName1, v))
}

// TableName1ContainsFold applies the ContainsFold predicate on the "table_name1" field.
func TableName1ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName1, v))
}

// TableName2EQ applies the EQ predicate on the "table_name2" field.
func TableName2EQ(v int) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName2, v))
}

// TableName2NEQ applies the NEQ predicate on the "table_name2" field.
func TableName2NEQ(v int) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName2, v))
}

// TableName2In applies the In predicate on the "table_name2" field.
func TableName2In(vs ...int) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName2, vs...))
}

// TableName2NotIn applies the NotIn predicate on the "table_name2" field.
func TableName2NotIn(vs ...int) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName2, vs...))
}

// TableName2GT applies the GT predicate on the "table_name2" field.
func TableName2GT(v int) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName2, v))
}

// TableName2GTE applies the GTE predicate on the "table_name2" field.
func TableName2GTE(v int) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName2, v))
}

// TableName2LT applies the LT predicate on the "table_name2" field.
func TableName2LT(v int) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName2, v))
}

// TableName2LTE applies the LTE predicate on the "table_name2" field.
func TableName2LTE(v int) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName2, v))
}

// TableName3EQ applies the EQ predicate on the "table_name3" field.
func TableName3EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName3, v))
}

// TableName3NEQ applies the NEQ predicate on the "table_name3" field.
func TableName3NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName3, v))
}

// TableName3In applies the In predicate on the "table_name3" field.
func TableName3In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName3, vs...))
}

// TableName3NotIn applies the NotIn predicate on the "table_name3" field.
func TableName3NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName3, vs...))
}

// TableName3GT applies the GT predicate on the "table_name3" field.
func TableName3GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName3, v))
}

// TableName3GTE applies the GTE predicate on the "table_name3" field.
func TableName3GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName3, v))
}

// TableName3LT applies the LT predicate on the "table_name3" field.
func TableName3LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName3, v))
}

// TableName3LTE applies the LTE predicate on the "table_name3" field.
func TableName3LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName3, v))
}

// TableName3Contains applies the Contains predicate on the "table_name3" field.
func TableName3Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName3, v))
}

// TableName3HasPrefix applies the HasPrefix predicate on the "table_name3" field.
func TableName3HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName3, v))
}

// TableName3HasSuffix applies the HasSuffix predicate on the "table_name3" field.
func TableName3HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName3, v))
}

// TableName3EqualFold applies the EqualFold predicate on the "table_name3" field.
func TableName3EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName3, v))
}

// TableName3ContainsFold applies the ContainsFold predicate on the "table_name3" field.
func TableName3ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName3, v))
}

// TableName4EQ applies the EQ predicate on the "table_name4" field.
func TableName4EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName4, v))
}

// TableName4NEQ applies the NEQ predicate on the "table_name4" field.
func TableName4NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName4, v))
}

// TableName4In applies the In predicate on the "table_name4" field.
func TableName4In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName4, vs...))
}

// TableName4NotIn applies the NotIn predicate on the "table_name4" field.
func TableName4NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName4, vs...))
}

// TableName4GT applies the GT predicate on the "table_name4" field.
func TableName4GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName4, v))
}

// TableName4GTE applies the GTE predicate on the "table_name4" field.
func TableName4GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName4, v))
}

// TableName4LT applies the LT predicate on the "table_name4" field.
func TableName4LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName4, v))
}

// TableName4LTE applies the LTE predicate on the "table_name4" field.
func TableName4LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName4, v))
}

// TableName4Contains applies the Contains predicate on the "table_name4" field.
func TableName4Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName4, v))
}

// TableName4HasPrefix applies the HasPrefix predicate on the "table_name4" field.
func TableName4HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName4, v))
}

// TableName4HasSuffix applies the HasSuffix predicate on the "table_name4" field.
func TableName4HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName4, v))
}

// TableName4EqualFold applies the EqualFold predicate on the "table_name4" field.
func TableName4EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName4, v))
}

// TableName4ContainsFold applies the ContainsFold predicate on the "table_name4" field.
func TableName4ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName4, v))
}

// TableName5EQ applies the EQ predicate on the "table_name5" field.
func TableName5EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName5, v))
}

// TableName5NEQ applies the NEQ predicate on the "table_name5" field.
func TableName5NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName5, v))
}

// TableName5In applies the In predicate on the "table_name5" field.
func TableName5In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName5, vs...))
}

// TableName5NotIn applies the NotIn predicate on the "table_name5" field.
func TableName5NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName5, vs...))
}

// TableName5GT applies the GT predicate on the "table_name5" field.
func TableName5GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName5, v))
}

// TableName5GTE applies the GTE predicate on the "table_name5" field.
func TableName5GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName5, v))
}

// TableName5LT applies the LT predicate on the "table_name5" field.
func TableName5LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName5, v))
}

// TableName5LTE applies the LTE predicate on the "table_name5" field.
func TableName5LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName5, v))
}

// TableName5Contains applies the Contains predicate on the "table_name5" field.
func TableName5Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName5, v))
}

// TableName5HasPrefix applies the HasPrefix predicate on the "table_name5" field.
func TableName5HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName5, v))
}

// TableName5HasSuffix applies the HasSuffix predicate on the "table_name5" field.
func TableName5HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName5, v))
}

// TableName5EqualFold applies the EqualFold predicate on the "table_name5" field.
func TableName5EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName5, v))
}

// TableName5ContainsFold applies the ContainsFold predicate on the "table_name5" field.
func TableName5ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName5, v))
}

// TableName6EQ applies the EQ predicate on the "table_name6" field.
func TableName6EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName6, v))
}

// TableName6NEQ applies the NEQ predicate on the "table_name6" field.
func TableName6NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName6, v))
}

// TableName6In applies the In predicate on the "table_name6" field.
func TableName6In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName6, vs...))
}

// TableName6NotIn applies the NotIn predicate on the "table_name6" field.
func TableName6NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName6, vs...))
}

// TableName6GT applies the GT predicate on the "table_name6" field.
func TableName6GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName6, v))
}

// TableName6GTE applies the GTE predicate on the "table_name6" field.
func TableName6GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName6, v))
}

// TableName6LT applies the LT predicate on the "table_name6" field.
func TableName6LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName6, v))
}

// TableName6LTE applies the LTE predicate on the "table_name6" field.
func TableName6LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName6, v))
}

// TableName6Contains applies the Contains predicate on the "table_name6" field.
func TableName6Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName6, v))
}

// TableName6HasPrefix applies the HasPrefix predicate on the "table_name6" field.
func TableName6HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName6, v))
}

// TableName6HasSuffix applies the HasSuffix predicate on the "table_name6" field.
func TableName6HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName6, v))
}

// TableName6EqualFold applies the EqualFold predicate on the "table_name6" field.
func TableName6EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName6, v))
}

// TableName6ContainsFold applies the ContainsFold predicate on the "table_name6" field.
func TableName6ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName6, v))
}

// TableName7EQ applies the EQ predicate on the "table_name7" field.
func TableName7EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName7, v))
}

// TableName7NEQ applies the NEQ predicate on the "table_name7" field.
func TableName7NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName7, v))
}

// TableName7In applies the In predicate on the "table_name7" field.
func TableName7In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName7, vs...))
}

// TableName7NotIn applies the NotIn predicate on the "table_name7" field.
func TableName7NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName7, vs...))
}

// TableName7GT applies the GT predicate on the "table_name7" field.
func TableName7GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName7, v))
}

// TableName7GTE applies the GTE predicate on the "table_name7" field.
func TableName7GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName7, v))
}

// TableName7LT applies the LT predicate on the "table_name7" field.
func TableName7LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName7, v))
}

// TableName7LTE applies the LTE predicate on the "table_name7" field.
func TableName7LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName7, v))
}

// TableName7Contains applies the Contains predicate on the "table_name7" field.
func TableName7Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName7, v))
}

// TableName7HasPrefix applies the HasPrefix predicate on the "table_name7" field.
func TableName7HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName7, v))
}

// TableName7HasSuffix applies the HasSuffix predicate on the "table_name7" field.
func TableName7HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName7, v))
}

// TableName7EqualFold applies the EqualFold predicate on the "table_name7" field.
func TableName7EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName7, v))
}

// TableName7ContainsFold applies the ContainsFold predicate on the "table_name7" field.
func TableName7ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName7, v))
}

// TableName8EQ applies the EQ predicate on the "table_name8" field.
func TableName8EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName8, v))
}

// TableName8NEQ applies the NEQ predicate on the "table_name8" field.
func TableName8NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName8, v))
}

// TableName8In applies the In predicate on the "table_name8" field.
func TableName8In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName8, vs...))
}

// TableName8NotIn applies the NotIn predicate on the "table_name8" field.
func TableName8NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName8, vs...))
}

// TableName8GT applies the GT predicate on the "table_name8" field.
func TableName8GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName8, v))
}

// TableName8GTE applies the GTE predicate on the "table_name8" field.
func TableName8GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName8, v))
}

// TableName8LT applies the LT predicate on the "table_name8" field.
func TableName8LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName8, v))
}

// TableName8LTE applies the LTE predicate on the "table_name8" field.
func TableName8LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName8, v))
}

// TableName8Contains applies the Contains predicate on the "table_name8" field.
func TableName8Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName8, v))
}

// TableName8HasPrefix applies the HasPrefix predicate on the "table_name8" field.
func TableName8HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName8, v))
}

// TableName8HasSuffix applies the HasSuffix predicate on the "table_name8" field.
func TableName8HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName8, v))
}

// TableName8EqualFold applies the EqualFold predicate on the "table_name8" field.
func TableName8EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName8, v))
}

// TableName8ContainsFold applies the ContainsFold predicate on the "table_name8" field.
func TableName8ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName8, v))
}

// TableName9EQ applies the EQ predicate on the "table_name9" field.
func TableName9EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName9, v))
}

// TableName9NEQ applies the NEQ predicate on the "table_name9" field.
func TableName9NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName9, v))
}

// TableName9In applies the In predicate on the "table_name9" field.
func TableName9In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName9, vs...))
}

// TableName9NotIn applies the NotIn predicate on the "table_name9" field.
func TableName9NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName9, vs...))
}

// TableName9GT applies the GT predicate on the "table_name9" field.
func TableName9GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName9, v))
}

// TableName9GTE applies the GTE predicate on the "table_name9" field.
func TableName9GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName9, v))
}

// TableName9LT applies the LT predicate on the "table_name9" field.
func TableName9LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName9, v))
}

// TableName9LTE applies the LTE predicate on the "table_name9" field.
func TableName9LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName9, v))
}

// TableName9Contains applies the Contains predicate on the "table_name9" field.
func TableName9Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName9, v))
}

// TableName9HasPrefix applies the HasPrefix predicate on the "table_name9" field.
func TableName9HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName9, v))
}

// TableName9HasSuffix applies the HasSuffix predicate on the "table_name9" field.
func TableName9HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName9, v))
}

// TableName9EqualFold applies the EqualFold predicate on the "table_name9" field.
func TableName9EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName9, v))
}

// TableName9ContainsFold applies the ContainsFold predicate on the "table_name9" field.
func TableName9ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName9, v))
}

// TableName10EQ applies the EQ predicate on the "table_name10" field.
func TableName10EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName10, v))
}

// TableName10NEQ applies the NEQ predicate on the "table_name10" field.
func TableName10NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName10, v))
}

// TableName10In applies the In predicate on the "table_name10" field.
func TableName10In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName10, vs...))
}

// TableName10NotIn applies the NotIn predicate on the "table_name10" field.
func TableName10NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName10, vs...))
}

// TableName10GT applies the GT predicate on the "table_name10" field.
func TableName10GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName10, v))
}

// TableName10GTE applies the GTE predicate on the "table_name10" field.
func TableName10GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName10, v))
}

// TableName10LT applies the LT predicate on the "table_name10" field.
func TableName10LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName10, v))
}

// TableName10LTE applies the LTE predicate on the "table_name10" field.
func TableName10LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName10, v))
}

// TableName10Contains applies the Contains predicate on the "table_name10" field.
func TableName10Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName10, v))
}

// TableName10HasPrefix applies the HasPrefix predicate on the "table_name10" field.
func TableName10HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName10, v))
}

// TableName10HasSuffix applies the HasSuffix predicate on the "table_name10" field.
func TableName10HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName10, v))
}

// TableName10EqualFold applies the EqualFold predicate on the "table_name10" field.
func TableName10EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName10, v))
}

// TableName10ContainsFold applies the ContainsFold predicate on the "table_name10" field.
func TableName10ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName10, v))
}

// TableName11EQ applies the EQ predicate on the "table_name11" field.
func TableName11EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName11, v))
}

// TableName11NEQ applies the NEQ predicate on the "table_name11" field.
func TableName11NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName11, v))
}

// TableName11In applies the In predicate on the "table_name11" field.
func TableName11In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName11, vs...))
}

// TableName11NotIn applies the NotIn predicate on the "table_name11" field.
func TableName11NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName11, vs...))
}

// TableName11GT applies the GT predicate on the "table_name11" field.
func TableName11GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName11, v))
}

// TableName11GTE applies the GTE predicate on the "table_name11" field.
func TableName11GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName11, v))
}

// TableName11LT applies the LT predicate on the "table_name11" field.
func TableName11LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName11, v))
}

// TableName11LTE applies the LTE predicate on the "table_name11" field.
func TableName11LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName11, v))
}

// TableName11Contains applies the Contains predicate on the "table_name11" field.
func TableName11Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName11, v))
}

// TableName11HasPrefix applies the HasPrefix predicate on the "table_name11" field.
func TableName11HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName11, v))
}

// TableName11HasSuffix applies the HasSuffix predicate on the "table_name11" field.
func TableName11HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName11, v))
}

// TableName11EqualFold applies the EqualFold predicate on the "table_name11" field.
func TableName11EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName11, v))
}

// TableName11ContainsFold applies the ContainsFold predicate on the "table_name11" field.
func TableName11ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName11, v))
}

// TableName12EQ applies the EQ predicate on the "table_name12" field.
func TableName12EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName12, v))
}

// TableName12NEQ applies the NEQ predicate on the "table_name12" field.
func TableName12NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName12, v))
}

// TableName12In applies the In predicate on the "table_name12" field.
func TableName12In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName12, vs...))
}

// TableName12NotIn applies the NotIn predicate on the "table_name12" field.
func TableName12NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName12, vs...))
}

// TableName12GT applies the GT predicate on the "table_name12" field.
func TableName12GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName12, v))
}

// TableName12GTE applies the GTE predicate on the "table_name12" field.
func TableName12GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName12, v))
}

// TableName12LT applies the LT predicate on the "table_name12" field.
func TableName12LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName12, v))
}

// TableName12LTE applies the LTE predicate on the "table_name12" field.
func TableName12LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName12, v))
}

// TableName12Contains applies the Contains predicate on the "table_name12" field.
func TableName12Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName12, v))
}

// TableName12HasPrefix applies the HasPrefix predicate on the "table_name12" field.
func TableName12HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName12, v))
}

// TableName12HasSuffix applies the HasSuffix predicate on the "table_name12" field.
func TableName12HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName12, v))
}

// TableName12EqualFold applies the EqualFold predicate on the "table_name12" field.
func TableName12EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName12, v))
}

// TableName12ContainsFold applies the ContainsFold predicate on the "table_name12" field.
func TableName12ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName12, v))
}

// TableName13EQ applies the EQ predicate on the "table_name13" field.
func TableName13EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName13, v))
}

// TableName13NEQ applies the NEQ predicate on the "table_name13" field.
func TableName13NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName13, v))
}

// TableName13In applies the In predicate on the "table_name13" field.
func TableName13In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName13, vs...))
}

// TableName13NotIn applies the NotIn predicate on the "table_name13" field.
func TableName13NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName13, vs...))
}

// TableName13GT applies the GT predicate on the "table_name13" field.
func TableName13GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName13, v))
}

// TableName13GTE applies the GTE predicate on the "table_name13" field.
func TableName13GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName13, v))
}

// TableName13LT applies the LT predicate on the "table_name13" field.
func TableName13LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName13, v))
}

// TableName13LTE applies the LTE predicate on the "table_name13" field.
func TableName13LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName13, v))
}

// TableName13Contains applies the Contains predicate on the "table_name13" field.
func TableName13Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName13, v))
}

// TableName13HasPrefix applies the HasPrefix predicate on the "table_name13" field.
func TableName13HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName13, v))
}

// TableName13HasSuffix applies the HasSuffix predicate on the "table_name13" field.
func TableName13HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName13, v))
}

// TableName13EqualFold applies the EqualFold predicate on the "table_name13" field.
func TableName13EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName13, v))
}

// TableName13ContainsFold applies the ContainsFold predicate on the "table_name13" field.
func TableName13ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName13, v))
}

// TableName14EQ applies the EQ predicate on the "table_name14" field.
func TableName14EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName14, v))
}

// TableName14NEQ applies the NEQ predicate on the "table_name14" field.
func TableName14NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName14, v))
}

// TableName14In applies the In predicate on the "table_name14" field.
func TableName14In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName14, vs...))
}

// TableName14NotIn applies the NotIn predicate on the "table_name14" field.
func TableName14NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName14, vs...))
}

// TableName14GT applies the GT predicate on the "table_name14" field.
func TableName14GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName14, v))
}

// TableName14GTE applies the GTE predicate on the "table_name14" field.
func TableName14GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName14, v))
}

// TableName14LT applies the LT predicate on the "table_name14" field.
func TableName14LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName14, v))
}

// TableName14LTE applies the LTE predicate on the "table_name14" field.
func TableName14LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName14, v))
}

// TableName14Contains applies the Contains predicate on the "table_name14" field.
func TableName14Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName14, v))
}

// TableName14HasPrefix applies the HasPrefix predicate on the "table_name14" field.
func TableName14HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName14, v))
}

// TableName14HasSuffix applies the HasSuffix predicate on the "table_name14" field.
func TableName14HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName14, v))
}

// TableName14EqualFold applies the EqualFold predicate on the "table_name14" field.
func TableName14EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName14, v))
}

// TableName14ContainsFold applies the ContainsFold predicate on the "table_name14" field.
func TableName14ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName14, v))
}

// TableName15EQ applies the EQ predicate on the "table_name15" field.
func TableName15EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName15, v))
}

// TableName15NEQ applies the NEQ predicate on the "table_name15" field.
func TableName15NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName15, v))
}

// TableName15In applies the In predicate on the "table_name15" field.
func TableName15In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName15, vs...))
}

// TableName15NotIn applies the NotIn predicate on the "table_name15" field.
func TableName15NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName15, vs...))
}

// TableName15GT applies the GT predicate on the "table_name15" field.
func TableName15GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName15, v))
}

// TableName15GTE applies the GTE predicate on the "table_name15" field.
func TableName15GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName15, v))
}

// TableName15LT applies the LT predicate on the "table_name15" field.
func TableName15LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName15, v))
}

// TableName15LTE applies the LTE predicate on the "table_name15" field.
func TableName15LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName15, v))
}

// TableName15Contains applies the Contains predicate on the "table_name15" field.
func TableName15Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName15, v))
}

// TableName15HasPrefix applies the HasPrefix predicate on the "table_name15" field.
func TableName15HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName15, v))
}

// TableName15HasSuffix applies the HasSuffix predicate on the "table_name15" field.
func TableName15HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName15, v))
}

// TableName15EqualFold applies the EqualFold predicate on the "table_name15" field.
func TableName15EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName15, v))
}

// TableName15ContainsFold applies the ContainsFold predicate on the "table_name15" field.
func TableName15ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName15, v))
}

// TableName16EQ applies the EQ predicate on the "table_name16" field.
func TableName16EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName16, v))
}

// TableName16NEQ applies the NEQ predicate on the "table_name16" field.
func TableName16NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName16, v))
}

// TableName16In applies the In predicate on the "table_name16" field.
func TableName16In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName16, vs...))
}

// TableName16NotIn applies the NotIn predicate on the "table_name16" field.
func TableName16NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName16, vs...))
}

// TableName16GT applies the GT predicate on the "table_name16" field.
func TableName16GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName16, v))
}

// TableName16GTE applies the GTE predicate on the "table_name16" field.
func TableName16GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName16, v))
}

// TableName16LT applies the LT predicate on the "table_name16" field.
func TableName16LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName16, v))
}

// TableName16LTE applies the LTE predicate on the "table_name16" field.
func TableName16LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName16, v))
}

// TableName16Contains applies the Contains predicate on the "table_name16" field.
func TableName16Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName16, v))
}

// TableName16HasPrefix applies the HasPrefix predicate on the "table_name16" field.
func TableName16HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName16, v))
}

// TableName16HasSuffix applies the HasSuffix predicate on the "table_name16" field.
func TableName16HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName16, v))
}

// TableName16EqualFold applies the EqualFold predicate on the "table_name16" field.
func TableName16EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName16, v))
}

// TableName16ContainsFold applies the ContainsFold predicate on the "table_name16" field.
func TableName16ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName16, v))
}

// TableName17EQ applies the EQ predicate on the "table_name17" field.
func TableName17EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName17, v))
}

// TableName17NEQ applies the NEQ predicate on the "table_name17" field.
func TableName17NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName17, v))
}

// TableName17In applies the In predicate on the "table_name17" field.
func TableName17In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName17, vs...))
}

// TableName17NotIn applies the NotIn predicate on the "table_name17" field.
func TableName17NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName17, vs...))
}

// TableName17GT applies the GT predicate on the "table_name17" field.
func TableName17GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName17, v))
}

// TableName17GTE applies the GTE predicate on the "table_name17" field.
func TableName17GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName17, v))
}

// TableName17LT applies the LT predicate on the "table_name17" field.
func TableName17LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName17, v))
}

// TableName17LTE applies the LTE predicate on the "table_name17" field.
func TableName17LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName17, v))
}

// TableName17Contains applies the Contains predicate on the "table_name17" field.
func TableName17Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName17, v))
}

// TableName17HasPrefix applies the HasPrefix predicate on the "table_name17" field.
func TableName17HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName17, v))
}

// TableName17HasSuffix applies the HasSuffix predicate on the "table_name17" field.
func TableName17HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName17, v))
}

// TableName17EqualFold applies the EqualFold predicate on the "table_name17" field.
func TableName17EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName17, v))
}

// TableName17ContainsFold applies the ContainsFold predicate on the "table_name17" field.
func TableName17ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName17, v))
}

// TableName18EQ applies the EQ predicate on the "table_name18" field.
func TableName18EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName18, v))
}

// TableName18NEQ applies the NEQ predicate on the "table_name18" field.
func TableName18NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName18, v))
}

// TableName18In applies the In predicate on the "table_name18" field.
func TableName18In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName18, vs...))
}

// TableName18NotIn applies the NotIn predicate on the "table_name18" field.
func TableName18NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName18, vs...))
}

// TableName18GT applies the GT predicate on the "table_name18" field.
func TableName18GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName18, v))
}

// TableName18GTE applies the GTE predicate on the "table_name18" field.
func TableName18GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName18, v))
}

// TableName18LT applies the LT predicate on the "table_name18" field.
func TableName18LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName18, v))
}

// TableName18LTE applies the LTE predicate on the "table_name18" field.
func TableName18LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName18, v))
}

// TableName18Contains applies the Contains predicate on the "table_name18" field.
func TableName18Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName18, v))
}

// TableName18HasPrefix applies the HasPrefix predicate on the "table_name18" field.
func TableName18HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName18, v))
}

// TableName18HasSuffix applies the HasSuffix predicate on the "table_name18" field.
func TableName18HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName18, v))
}

// TableName18EqualFold applies the EqualFold predicate on the "table_name18" field.
func TableName18EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName18, v))
}

// TableName18ContainsFold applies the ContainsFold predicate on the "table_name18" field.
func TableName18ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName18, v))
}

// TableName19EQ applies the EQ predicate on the "table_name19" field.
func TableName19EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName19, v))
}

// TableName19NEQ applies the NEQ predicate on the "table_name19" field.
func TableName19NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName19, v))
}

// TableName19In applies the In predicate on the "table_name19" field.
func TableName19In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName19, vs...))
}

// TableName19NotIn applies the NotIn predicate on the "table_name19" field.
func TableName19NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName19, vs...))
}

// TableName19GT applies the GT predicate on the "table_name19" field.
func TableName19GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName19, v))
}

// TableName19GTE applies the GTE predicate on the "table_name19" field.
func TableName19GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName19, v))
}

// TableName19LT applies the LT predicate on the "table_name19" field.
func TableName19LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName19, v))
}

// TableName19LTE applies the LTE predicate on the "table_name19" field.
func TableName19LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName19, v))
}

// TableName19Contains applies the Contains predicate on the "table_name19" field.
func TableName19Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName19, v))
}

// TableName19HasPrefix applies the HasPrefix predicate on the "table_name19" field.
func TableName19HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName19, v))
}

// TableName19HasSuffix applies the HasSuffix predicate on the "table_name19" field.
func TableName19HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName19, v))
}

// TableName19EqualFold applies the EqualFold predicate on the "table_name19" field.
func TableName19EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName19, v))
}

// TableName19ContainsFold applies the ContainsFold predicate on the "table_name19" field.
func TableName19ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName19, v))
}

// TableName20EQ applies the EQ predicate on the "table_name20" field.
func TableName20EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName20, v))
}

// TableName20NEQ applies the NEQ predicate on the "table_name20" field.
func TableName20NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName20, v))
}

// TableName20In applies the In predicate on the "table_name20" field.
func TableName20In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName20, vs...))
}

// TableName20NotIn applies the NotIn predicate on the "table_name20" field.
func TableName20NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName20, vs...))
}

// TableName20GT applies the GT predicate on the "table_name20" field.
func TableName20GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName20, v))
}

// TableName20GTE applies the GTE predicate on the "table_name20" field.
func TableName20GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName20, v))
}

// TableName20LT applies the LT predicate on the "table_name20" field.
func TableName20LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName20, v))
}

// TableName20LTE applies the LTE predicate on the "table_name20" field.
func TableName20LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName20, v))
}

// TableName20Contains applies the Contains predicate on the "table_name20" field.
func TableName20Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName20, v))
}

// TableName20HasPrefix applies the HasPrefix predicate on the "table_name20" field.
func TableName20HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName20, v))
}

// TableName20HasSuffix applies the HasSuffix predicate on the "table_name20" field.
func TableName20HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName20, v))
}

// TableName20EqualFold applies the EqualFold predicate on the "table_name20" field.
func TableName20EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName20, v))
}

// TableName20ContainsFold applies the ContainsFold predicate on the "table_name20" field.
func TableName20ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName20, v))
}

// TableName21EQ applies the EQ predicate on the "table_name21" field.
func TableName21EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName21, v))
}

// TableName21NEQ applies the NEQ predicate on the "table_name21" field.
func TableName21NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName21, v))
}

// TableName21In applies the In predicate on the "table_name21" field.
func TableName21In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName21, vs...))
}

// TableName21NotIn applies the NotIn predicate on the "table_name21" field.
func TableName21NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName21, vs...))
}

// TableName21GT applies the GT predicate on the "table_name21" field.
func TableName21GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName21, v))
}

// TableName21GTE applies the GTE predicate on the "table_name21" field.
func TableName21GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName21, v))
}

// TableName21LT applies the LT predicate on the "table_name21" field.
func TableName21LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName21, v))
}

// TableName21LTE applies the LTE predicate on the "table_name21" field.
func TableName21LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName21, v))
}

// TableName21Contains applies the Contains predicate on the "table_name21" field.
func TableName21Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName21, v))
}

// TableName21HasPrefix applies the HasPrefix predicate on the "table_name21" field.
func TableName21HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName21, v))
}

// TableName21HasSuffix applies the HasSuffix predicate on the "table_name21" field.
func TableName21HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName21, v))
}

// TableName21EqualFold applies the EqualFold predicate on the "table_name21" field.
func TableName21EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName21, v))
}

// TableName21ContainsFold applies the ContainsFold predicate on the "table_name21" field.
func TableName21ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName21, v))
}

// TableName22EQ applies the EQ predicate on the "table_name22" field.
func TableName22EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName22, v))
}

// TableName22NEQ applies the NEQ predicate on the "table_name22" field.
func TableName22NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName22, v))
}

// TableName22In applies the In predicate on the "table_name22" field.
func TableName22In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName22, vs...))
}

// TableName22NotIn applies the NotIn predicate on the "table_name22" field.
func TableName22NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName22, vs...))
}

// TableName22GT applies the GT predicate on the "table_name22" field.
func TableName22GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName22, v))
}

// TableName22GTE applies the GTE predicate on the "table_name22" field.
func TableName22GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName22, v))
}

// TableName22LT applies the LT predicate on the "table_name22" field.
func TableName22LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName22, v))
}

// TableName22LTE applies the LTE predicate on the "table_name22" field.
func TableName22LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName22, v))
}

// TableName22Contains applies the Contains predicate on the "table_name22" field.
func TableName22Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName22, v))
}

// TableName22HasPrefix applies the HasPrefix predicate on the "table_name22" field.
func TableName22HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName22, v))
}

// TableName22HasSuffix applies the HasSuffix predicate on the "table_name22" field.
func TableName22HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName22, v))
}

// TableName22EqualFold applies the EqualFold predicate on the "table_name22" field.
func TableName22EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName22, v))
}

// TableName22ContainsFold applies the ContainsFold predicate on the "table_name22" field.
func TableName22ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName22, v))
}

// TableName23EQ applies the EQ predicate on the "table_name23" field.
func TableName23EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName23, v))
}

// TableName23NEQ applies the NEQ predicate on the "table_name23" field.
func TableName23NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName23, v))
}

// TableName23In applies the In predicate on the "table_name23" field.
func TableName23In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName23, vs...))
}

// TableName23NotIn applies the NotIn predicate on the "table_name23" field.
func TableName23NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName23, vs...))
}

// TableName23GT applies the GT predicate on the "table_name23" field.
func TableName23GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName23, v))
}

// TableName23GTE applies the GTE predicate on the "table_name23" field.
func TableName23GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName23, v))
}

// TableName23LT applies the LT predicate on the "table_name23" field.
func TableName23LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName23, v))
}

// TableName23LTE applies the LTE predicate on the "table_name23" field.
func TableName23LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName23, v))
}

// TableName23Contains applies the Contains predicate on the "table_name23" field.
func TableName23Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName23, v))
}

// TableName23HasPrefix applies the HasPrefix predicate on the "table_name23" field.
func TableName23HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName23, v))
}

// TableName23HasSuffix applies the HasSuffix predicate on the "table_name23" field.
func TableName23HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName23, v))
}

// TableName23EqualFold applies the EqualFold predicate on the "table_name23" field.
func TableName23EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName23, v))
}

// TableName23ContainsFold applies the ContainsFold predicate on the "table_name23" field.
func TableName23ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName23, v))
}

// TableName24EQ applies the EQ predicate on the "table_name24" field.
func TableName24EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName24, v))
}

// TableName24NEQ applies the NEQ predicate on the "table_name24" field.
func TableName24NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName24, v))
}

// TableName24In applies the In predicate on the "table_name24" field.
func TableName24In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName24, vs...))
}

// TableName24NotIn applies the NotIn predicate on the "table_name24" field.
func TableName24NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName24, vs...))
}

// TableName24GT applies the GT predicate on the "table_name24" field.
func TableName24GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName24, v))
}

// TableName24GTE applies the GTE predicate on the "table_name24" field.
func TableName24GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName24, v))
}

// TableName24LT applies the LT predicate on the "table_name24" field.
func TableName24LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName24, v))
}

// TableName24LTE applies the LTE predicate on the "table_name24" field.
func TableName24LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName24, v))
}

// TableName24Contains applies the Contains predicate on the "table_name24" field.
func TableName24Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName24, v))
}

// TableName24HasPrefix applies the HasPrefix predicate on the "table_name24" field.
func TableName24HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName24, v))
}

// TableName24HasSuffix applies the HasSuffix predicate on the "table_name24" field.
func TableName24HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName24, v))
}

// TableName24EqualFold applies the EqualFold predicate on the "table_name24" field.
func TableName24EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName24, v))
}

// TableName24ContainsFold applies the ContainsFold predicate on the "table_name24" field.
func TableName24ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName24, v))
}

// TableName25EQ applies the EQ predicate on the "table_name25" field.
func TableName25EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName25, v))
}

// TableName25NEQ applies the NEQ predicate on the "table_name25" field.
func TableName25NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName25, v))
}

// TableName25In applies the In predicate on the "table_name25" field.
func TableName25In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName25, vs...))
}

// TableName25NotIn applies the NotIn predicate on the "table_name25" field.
func TableName25NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName25, vs...))
}

// TableName25GT applies the GT predicate on the "table_name25" field.
func TableName25GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName25, v))
}

// TableName25GTE applies the GTE predicate on the "table_name25" field.
func TableName25GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName25, v))
}

// TableName25LT applies the LT predicate on the "table_name25" field.
func TableName25LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName25, v))
}

// TableName25LTE applies the LTE predicate on the "table_name25" field.
func TableName25LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName25, v))
}

// TableName25Contains applies the Contains predicate on the "table_name25" field.
func TableName25Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName25, v))
}

// TableName25HasPrefix applies the HasPrefix predicate on the "table_name25" field.
func TableName25HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName25, v))
}

// TableName25HasSuffix applies the HasSuffix predicate on the "table_name25" field.
func TableName25HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName25, v))
}

// TableName25EqualFold applies the EqualFold predicate on the "table_name25" field.
func TableName25EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName25, v))
}

// TableName25ContainsFold applies the ContainsFold predicate on the "table_name25" field.
func TableName25ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName25, v))
}

// TableName26EQ applies the EQ predicate on the "table_name26" field.
func TableName26EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName26, v))
}

// TableName26NEQ applies the NEQ predicate on the "table_name26" field.
func TableName26NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName26, v))
}

// TableName26In applies the In predicate on the "table_name26" field.
func TableName26In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName26, vs...))
}

// TableName26NotIn applies the NotIn predicate on the "table_name26" field.
func TableName26NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName26, vs...))
}

// TableName26GT applies the GT predicate on the "table_name26" field.
func TableName26GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName26, v))
}

// TableName26GTE applies the GTE predicate on the "table_name26" field.
func TableName26GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName26, v))
}

// TableName26LT applies the LT predicate on the "table_name26" field.
func TableName26LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName26, v))
}

// TableName26LTE applies the LTE predicate on the "table_name26" field.
func TableName26LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName26, v))
}

// TableName26Contains applies the Contains predicate on the "table_name26" field.
func TableName26Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName26, v))
}

// TableName26HasPrefix applies the HasPrefix predicate on the "table_name26" field.
func TableName26HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName26, v))
}

// TableName26HasSuffix applies the HasSuffix predicate on the "table_name26" field.
func TableName26HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName26, v))
}

// TableName26EqualFold applies the EqualFold predicate on the "table_name26" field.
func TableName26EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName26, v))
}

// TableName26ContainsFold applies the ContainsFold predicate on the "table_name26" field.
func TableName26ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName26, v))
}

// TableName27EQ applies the EQ predicate on the "table_name27" field.
func TableName27EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName27, v))
}

// TableName27NEQ applies the NEQ predicate on the "table_name27" field.
func TableName27NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName27, v))
}

// TableName27In applies the In predicate on the "table_name27" field.
func TableName27In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName27, vs...))
}

// TableName27NotIn applies the NotIn predicate on the "table_name27" field.
func TableName27NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName27, vs...))
}

// TableName27GT applies the GT predicate on the "table_name27" field.
func TableName27GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName27, v))
}

// TableName27GTE applies the GTE predicate on the "table_name27" field.
func TableName27GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName27, v))
}

// TableName27LT applies the LT predicate on the "table_name27" field.
func TableName27LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName27, v))
}

// TableName27LTE applies the LTE predicate on the "table_name27" field.
func TableName27LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName27, v))
}

// TableName27Contains applies the Contains predicate on the "table_name27" field.
func TableName27Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName27, v))
}

// TableName27HasPrefix applies the HasPrefix predicate on the "table_name27" field.
func TableName27HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName27, v))
}

// TableName27HasSuffix applies the HasSuffix predicate on the "table_name27" field.
func TableName27HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName27, v))
}

// TableName27EqualFold applies the EqualFold predicate on the "table_name27" field.
func TableName27EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName27, v))
}

// TableName27ContainsFold applies the ContainsFold predicate on the "table_name27" field.
func TableName27ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName27, v))
}

// TableName28EQ applies the EQ predicate on the "table_name28" field.
func TableName28EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName28, v))
}

// TableName28NEQ applies the NEQ predicate on the "table_name28" field.
func TableName28NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName28, v))
}

// TableName28In applies the In predicate on the "table_name28" field.
func TableName28In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName28, vs...))
}

// TableName28NotIn applies the NotIn predicate on the "table_name28" field.
func TableName28NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName28, vs...))
}

// TableName28GT applies the GT predicate on the "table_name28" field.
func TableName28GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName28, v))
}

// TableName28GTE applies the GTE predicate on the "table_name28" field.
func TableName28GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName28, v))
}

// TableName28LT applies the LT predicate on the "table_name28" field.
func TableName28LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName28, v))
}

// TableName28LTE applies the LTE predicate on the "table_name28" field.
func TableName28LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName28, v))
}

// TableName28Contains applies the Contains predicate on the "table_name28" field.
func TableName28Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName28, v))
}

// TableName28HasPrefix applies the HasPrefix predicate on the "table_name28" field.
func TableName28HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName28, v))
}

// TableName28HasSuffix applies the HasSuffix predicate on the "table_name28" field.
func TableName28HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName28, v))
}

// TableName28EqualFold applies the EqualFold predicate on the "table_name28" field.
func TableName28EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName28, v))
}

// TableName28ContainsFold applies the ContainsFold predicate on the "table_name28" field.
func TableName28ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName28, v))
}

// TableName29EQ applies the EQ predicate on the "table_name29" field.
func TableName29EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName29, v))
}

// TableName29NEQ applies the NEQ predicate on the "table_name29" field.
func TableName29NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName29, v))
}

// TableName29In applies the In predicate on the "table_name29" field.
func TableName29In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName29, vs...))
}

// TableName29NotIn applies the NotIn predicate on the "table_name29" field.
func TableName29NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName29, vs...))
}

// TableName29GT applies the GT predicate on the "table_name29" field.
func TableName29GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName29, v))
}

// TableName29GTE applies the GTE predicate on the "table_name29" field.
func TableName29GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName29, v))
}

// TableName29LT applies the LT predicate on the "table_name29" field.
func TableName29LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName29, v))
}

// TableName29LTE applies the LTE predicate on the "table_name29" field.
func TableName29LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName29, v))
}

// TableName29Contains applies the Contains predicate on the "table_name29" field.
func TableName29Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName29, v))
}

// TableName29HasPrefix applies the HasPrefix predicate on the "table_name29" field.
func TableName29HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName29, v))
}

// TableName29HasSuffix applies the HasSuffix predicate on the "table_name29" field.
func TableName29HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName29, v))
}

// TableName29EqualFold applies the EqualFold predicate on the "table_name29" field.
func TableName29EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName29, v))
}

// TableName29ContainsFold applies the ContainsFold predicate on the "table_name29" field.
func TableName29ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName29, v))
}

// TableName30EQ applies the EQ predicate on the "table_name30" field.
func TableName30EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName30, v))
}

// TableName30NEQ applies the NEQ predicate on the "table_name30" field.
func TableName30NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName30, v))
}

// TableName30In applies the In predicate on the "table_name30" field.
func TableName30In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName30, vs...))
}

// TableName30NotIn applies the NotIn predicate on the "table_name30" field.
func TableName30NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName30, vs...))
}

// TableName30GT applies the GT predicate on the "table_name30" field.
func TableName30GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName30, v))
}

// TableName30GTE applies the GTE predicate on the "table_name30" field.
func TableName30GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName30, v))
}

// TableName30LT applies the LT predicate on the "table_name30" field.
func TableName30LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName30, v))
}

// TableName30LTE applies the LTE predicate on the "table_name30" field.
func TableName30LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName30, v))
}

// TableName30Contains applies the Contains predicate on the "table_name30" field.
func TableName30Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName30, v))
}

// TableName30HasPrefix applies the HasPrefix predicate on the "table_name30" field.
func TableName30HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName30, v))
}

// TableName30HasSuffix applies the HasSuffix predicate on the "table_name30" field.
func TableName30HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName30, v))
}

// TableName30EqualFold applies the EqualFold predicate on the "table_name30" field.
func TableName30EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName30, v))
}

// TableName30ContainsFold applies the ContainsFold predicate on the "table_name30" field.
func TableName30ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName30, v))
}

// TableName31EQ applies the EQ predicate on the "table_name31" field.
func TableName31EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName31, v))
}

// TableName31NEQ applies the NEQ predicate on the "table_name31" field.
func TableName31NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName31, v))
}

// TableName31In applies the In predicate on the "table_name31" field.
func TableName31In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName31, vs...))
}

// TableName31NotIn applies the NotIn predicate on the "table_name31" field.
func TableName31NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName31, vs...))
}

// TableName31GT applies the GT predicate on the "table_name31" field.
func TableName31GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName31, v))
}

// TableName31GTE applies the GTE predicate on the "table_name31" field.
func TableName31GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName31, v))
}

// TableName31LT applies the LT predicate on the "table_name31" field.
func TableName31LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName31, v))
}

// TableName31LTE applies the LTE predicate on the "table_name31" field.
func TableName31LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName31, v))
}

// TableName31Contains applies the Contains predicate on the "table_name31" field.
func TableName31Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName31, v))
}

// TableName31HasPrefix applies the HasPrefix predicate on the "table_name31" field.
func TableName31HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName31, v))
}

// TableName31HasSuffix applies the HasSuffix predicate on the "table_name31" field.
func TableName31HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName31, v))
}

// TableName31EqualFold applies the EqualFold predicate on the "table_name31" field.
func TableName31EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName31, v))
}

// TableName31ContainsFold applies the ContainsFold predicate on the "table_name31" field.
func TableName31ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName31, v))
}

// TableName32EQ applies the EQ predicate on the "table_name32" field.
func TableName32EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName32, v))
}

// TableName32NEQ applies the NEQ predicate on the "table_name32" field.
func TableName32NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName32, v))
}

// TableName32In applies the In predicate on the "table_name32" field.
func TableName32In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName32, vs...))
}

// TableName32NotIn applies the NotIn predicate on the "table_name32" field.
func TableName32NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName32, vs...))
}

// TableName32GT applies the GT predicate on the "table_name32" field.
func TableName32GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName32, v))
}

// TableName32GTE applies the GTE predicate on the "table_name32" field.
func TableName32GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName32, v))
}

// TableName32LT applies the LT predicate on the "table_name32" field.
func TableName32LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName32, v))
}

// TableName32LTE applies the LTE predicate on the "table_name32" field.
func TableName32LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName32, v))
}

// TableName32Contains applies the Contains predicate on the "table_name32" field.
func TableName32Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName32, v))
}

// TableName32HasPrefix applies the HasPrefix predicate on the "table_name32" field.
func TableName32HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName32, v))
}

// TableName32HasSuffix applies the HasSuffix predicate on the "table_name32" field.
func TableName32HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName32, v))
}

// TableName32EqualFold applies the EqualFold predicate on the "table_name32" field.
func TableName32EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName32, v))
}

// TableName32ContainsFold applies the ContainsFold predicate on the "table_name32" field.
func TableName32ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName32, v))
}

// TableName33EQ applies the EQ predicate on the "table_name33" field.
func TableName33EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName33, v))
}

// TableName33NEQ applies the NEQ predicate on the "table_name33" field.
func TableName33NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName33, v))
}

// TableName33In applies the In predicate on the "table_name33" field.
func TableName33In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName33, vs...))
}

// TableName33NotIn applies the NotIn predicate on the "table_name33" field.
func TableName33NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName33, vs...))
}

// TableName33GT applies the GT predicate on the "table_name33" field.
func TableName33GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName33, v))
}

// TableName33GTE applies the GTE predicate on the "table_name33" field.
func TableName33GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName33, v))
}

// TableName33LT applies the LT predicate on the "table_name33" field.
func TableName33LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName33, v))
}

// TableName33LTE applies the LTE predicate on the "table_name33" field.
func TableName33LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName33, v))
}

// TableName33Contains applies the Contains predicate on the "table_name33" field.
func TableName33Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName33, v))
}

// TableName33HasPrefix applies the HasPrefix predicate on the "table_name33" field.
func TableName33HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName33, v))
}

// TableName33HasSuffix applies the HasSuffix predicate on the "table_name33" field.
func TableName33HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName33, v))
}

// TableName33EqualFold applies the EqualFold predicate on the "table_name33" field.
func TableName33EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName33, v))
}

// TableName33ContainsFold applies the ContainsFold predicate on the "table_name33" field.
func TableName33ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName33, v))
}

// TableName34EQ applies the EQ predicate on the "table_name34" field.
func TableName34EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName34, v))
}

// TableName34NEQ applies the NEQ predicate on the "table_name34" field.
func TableName34NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName34, v))
}

// TableName34In applies the In predicate on the "table_name34" field.
func TableName34In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName34, vs...))
}

// TableName34NotIn applies the NotIn predicate on the "table_name34" field.
func TableName34NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName34, vs...))
}

// TableName34GT applies the GT predicate on the "table_name34" field.
func TableName34GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName34, v))
}

// TableName34GTE applies the GTE predicate on the "table_name34" field.
func TableName34GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName34, v))
}

// TableName34LT applies the LT predicate on the "table_name34" field.
func TableName34LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName34, v))
}

// TableName34LTE applies the LTE predicate on the "table_name34" field.
func TableName34LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName34, v))
}

// TableName34Contains applies the Contains predicate on the "table_name34" field.
func TableName34Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName34, v))
}

// TableName34HasPrefix applies the HasPrefix predicate on the "table_name34" field.
func TableName34HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName34, v))
}

// TableName34HasSuffix applies the HasSuffix predicate on the "table_name34" field.
func TableName34HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName34, v))
}

// TableName34EqualFold applies the EqualFold predicate on the "table_name34" field.
func TableName34EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName34, v))
}

// TableName34ContainsFold applies the ContainsFold predicate on the "table_name34" field.
func TableName34ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName34, v))
}

// TableName35EQ applies the EQ predicate on the "table_name35" field.
func TableName35EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName35, v))
}

// TableName35NEQ applies the NEQ predicate on the "table_name35" field.
func TableName35NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName35, v))
}

// TableName35In applies the In predicate on the "table_name35" field.
func TableName35In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName35, vs...))
}

// TableName35NotIn applies the NotIn predicate on the "table_name35" field.
func TableName35NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName35, vs...))
}

// TableName35GT applies the GT predicate on the "table_name35" field.
func TableName35GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName35, v))
}

// TableName35GTE applies the GTE predicate on the "table_name35" field.
func TableName35GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName35, v))
}

// TableName35LT applies the LT predicate on the "table_name35" field.
func TableName35LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName35, v))
}

// TableName35LTE applies the LTE predicate on the "table_name35" field.
func TableName35LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName35, v))
}

// TableName35Contains applies the Contains predicate on the "table_name35" field.
func TableName35Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName35, v))
}

// TableName35HasPrefix applies the HasPrefix predicate on the "table_name35" field.
func TableName35HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName35, v))
}

// TableName35HasSuffix applies the HasSuffix predicate on the "table_name35" field.
func TableName35HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName35, v))
}

// TableName35EqualFold applies the EqualFold predicate on the "table_name35" field.
func TableName35EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName35, v))
}

// TableName35ContainsFold applies the ContainsFold predicate on the "table_name35" field.
func TableName35ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName35, v))
}

// TableName36EQ applies the EQ predicate on the "table_name36" field.
func TableName36EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName36, v))
}

// TableName36NEQ applies the NEQ predicate on the "table_name36" field.
func TableName36NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName36, v))
}

// TableName36In applies the In predicate on the "table_name36" field.
func TableName36In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName36, vs...))
}

// TableName36NotIn applies the NotIn predicate on the "table_name36" field.
func TableName36NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName36, vs...))
}

// TableName36GT applies the GT predicate on the "table_name36" field.
func TableName36GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName36, v))
}

// TableName36GTE applies the GTE predicate on the "table_name36" field.
func TableName36GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName36, v))
}

// TableName36LT applies the LT predicate on the "table_name36" field.
func TableName36LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName36, v))
}

// TableName36LTE applies the LTE predicate on the "table_name36" field.
func TableName36LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName36, v))
}

// TableName36Contains applies the Contains predicate on the "table_name36" field.
func TableName36Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName36, v))
}

// TableName36HasPrefix applies the HasPrefix predicate on the "table_name36" field.
func TableName36HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName36, v))
}

// TableName36HasSuffix applies the HasSuffix predicate on the "table_name36" field.
func TableName36HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName36, v))
}

// TableName36EqualFold applies the EqualFold predicate on the "table_name36" field.
func TableName36EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName36, v))
}

// TableName36ContainsFold applies the ContainsFold predicate on the "table_name36" field.
func TableName36ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName36, v))
}

// TableName37EQ applies the EQ predicate on the "table_name37" field.
func TableName37EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName37, v))
}

// TableName37NEQ applies the NEQ predicate on the "table_name37" field.
func TableName37NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName37, v))
}

// TableName37In applies the In predicate on the "table_name37" field.
func TableName37In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName37, vs...))
}

// TableName37NotIn applies the NotIn predicate on the "table_name37" field.
func TableName37NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName37, vs...))
}

// TableName37GT applies the GT predicate on the "table_name37" field.
func TableName37GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName37, v))
}

// TableName37GTE applies the GTE predicate on the "table_name37" field.
func TableName37GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName37, v))
}

// TableName37LT applies the LT predicate on the "table_name37" field.
func TableName37LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName37, v))
}

// TableName37LTE applies the LTE predicate on the "table_name37" field.
func TableName37LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName37, v))
}

// TableName37Contains applies the Contains predicate on the "table_name37" field.
func TableName37Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName37, v))
}

// TableName37HasPrefix applies the HasPrefix predicate on the "table_name37" field.
func TableName37HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName37, v))
}

// TableName37HasSuffix applies the HasSuffix predicate on the "table_name37" field.
func TableName37HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName37, v))
}

// TableName37EqualFold applies the EqualFold predicate on the "table_name37" field.
func TableName37EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName37, v))
}

// TableName37ContainsFold applies the ContainsFold predicate on the "table_name37" field.
func TableName37ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName37, v))
}

// TableName38EQ applies the EQ predicate on the "table_name38" field.
func TableName38EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName38, v))
}

// TableName38NEQ applies the NEQ predicate on the "table_name38" field.
func TableName38NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName38, v))
}

// TableName38In applies the In predicate on the "table_name38" field.
func TableName38In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName38, vs...))
}

// TableName38NotIn applies the NotIn predicate on the "table_name38" field.
func TableName38NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName38, vs...))
}

// TableName38GT applies the GT predicate on the "table_name38" field.
func TableName38GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName38, v))
}

// TableName38GTE applies the GTE predicate on the "table_name38" field.
func TableName38GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName38, v))
}

// TableName38LT applies the LT predicate on the "table_name38" field.
func TableName38LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName38, v))
}

// TableName38LTE applies the LTE predicate on the "table_name38" field.
func TableName38LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName38, v))
}

// TableName38Contains applies the Contains predicate on the "table_name38" field.
func TableName38Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName38, v))
}

// TableName38HasPrefix applies the HasPrefix predicate on the "table_name38" field.
func TableName38HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName38, v))
}

// TableName38HasSuffix applies the HasSuffix predicate on the "table_name38" field.
func TableName38HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName38, v))
}

// TableName38EqualFold applies the EqualFold predicate on the "table_name38" field.
func TableName38EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName38, v))
}

// TableName38ContainsFold applies the ContainsFold predicate on the "table_name38" field.
func TableName38ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName38, v))
}

// TableName39EQ applies the EQ predicate on the "table_name39" field.
func TableName39EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName39, v))
}

// TableName39NEQ applies the NEQ predicate on the "table_name39" field.
func TableName39NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName39, v))
}

// TableName39In applies the In predicate on the "table_name39" field.
func TableName39In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName39, vs...))
}

// TableName39NotIn applies the NotIn predicate on the "table_name39" field.
func TableName39NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName39, vs...))
}

// TableName39GT applies the GT predicate on the "table_name39" field.
func TableName39GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName39, v))
}

// TableName39GTE applies the GTE predicate on the "table_name39" field.
func TableName39GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName39, v))
}

// TableName39LT applies the LT predicate on the "table_name39" field.
func TableName39LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName39, v))
}

// TableName39LTE applies the LTE predicate on the "table_name39" field.
func TableName39LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName39, v))
}

// TableName39Contains applies the Contains predicate on the "table_name39" field.
func TableName39Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName39, v))
}

// TableName39HasPrefix applies the HasPrefix predicate on the "table_name39" field.
func TableName39HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName39, v))
}

// TableName39HasSuffix applies the HasSuffix predicate on the "table_name39" field.
func TableName39HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName39, v))
}

// TableName39EqualFold applies the EqualFold predicate on the "table_name39" field.
func TableName39EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName39, v))
}

// TableName39ContainsFold applies the ContainsFold predicate on the "table_name39" field.
func TableName39ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName39, v))
}

// TableName40EQ applies the EQ predicate on the "table_name40" field.
func TableName40EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName40, v))
}

// TableName40NEQ applies the NEQ predicate on the "table_name40" field.
func TableName40NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName40, v))
}

// TableName40In applies the In predicate on the "table_name40" field.
func TableName40In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName40, vs...))
}

// TableName40NotIn applies the NotIn predicate on the "table_name40" field.
func TableName40NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName40, vs...))
}

// TableName40GT applies the GT predicate on the "table_name40" field.
func TableName40GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName40, v))
}

// TableName40GTE applies the GTE predicate on the "table_name40" field.
func TableName40GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName40, v))
}

// TableName40LT applies the LT predicate on the "table_name40" field.
func TableName40LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName40, v))
}

// TableName40LTE applies the LTE predicate on the "table_name40" field.
func TableName40LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName40, v))
}

// TableName40Contains applies the Contains predicate on the "table_name40" field.
func TableName40Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName40, v))
}

// TableName40HasPrefix applies the HasPrefix predicate on the "table_name40" field.
func TableName40HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName40, v))
}

// TableName40HasSuffix applies the HasSuffix predicate on the "table_name40" field.
func TableName40HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName40, v))
}

// TableName40EqualFold applies the EqualFold predicate on the "table_name40" field.
func TableName40EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName40, v))
}

// TableName40ContainsFold applies the ContainsFold predicate on the "table_name40" field.
func TableName40ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName40, v))
}

// TableName41EQ applies the EQ predicate on the "table_name41" field.
func TableName41EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName41, v))
}

// TableName41NEQ applies the NEQ predicate on the "table_name41" field.
func TableName41NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName41, v))
}

// TableName41In applies the In predicate on the "table_name41" field.
func TableName41In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName41, vs...))
}

// TableName41NotIn applies the NotIn predicate on the "table_name41" field.
func TableName41NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName41, vs...))
}

// TableName41GT applies the GT predicate on the "table_name41" field.
func TableName41GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName41, v))
}

// TableName41GTE applies the GTE predicate on the "table_name41" field.
func TableName41GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName41, v))
}

// TableName41LT applies the LT predicate on the "table_name41" field.
func TableName41LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName41, v))
}

// TableName41LTE applies the LTE predicate on the "table_name41" field.
func TableName41LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName41, v))
}

// TableName41Contains applies the Contains predicate on the "table_name41" field.
func TableName41Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName41, v))
}

// TableName41HasPrefix applies the HasPrefix predicate on the "table_name41" field.
func TableName41HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName41, v))
}

// TableName41HasSuffix applies the HasSuffix predicate on the "table_name41" field.
func TableName41HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName41, v))
}

// TableName41EqualFold applies the EqualFold predicate on the "table_name41" field.
func TableName41EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName41, v))
}

// TableName41ContainsFold applies the ContainsFold predicate on the "table_name41" field.
func TableName41ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName41, v))
}

// TableName42EQ applies the EQ predicate on the "table_name42" field.
func TableName42EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName42, v))
}

// TableName42NEQ applies the NEQ predicate on the "table_name42" field.
func TableName42NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName42, v))
}

// TableName42In applies the In predicate on the "table_name42" field.
func TableName42In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName42, vs...))
}

// TableName42NotIn applies the NotIn predicate on the "table_name42" field.
func TableName42NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName42, vs...))
}

// TableName42GT applies the GT predicate on the "table_name42" field.
func TableName42GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName42, v))
}

// TableName42GTE applies the GTE predicate on the "table_name42" field.
func TableName42GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName42, v))
}

// TableName42LT applies the LT predicate on the "table_name42" field.
func TableName42LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName42, v))
}

// TableName42LTE applies the LTE predicate on the "table_name42" field.
func TableName42LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName42, v))
}

// TableName42Contains applies the Contains predicate on the "table_name42" field.
func TableName42Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName42, v))
}

// TableName42HasPrefix applies the HasPrefix predicate on the "table_name42" field.
func TableName42HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName42, v))
}

// TableName42HasSuffix applies the HasSuffix predicate on the "table_name42" field.
func TableName42HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName42, v))
}

// TableName42EqualFold applies the EqualFold predicate on the "table_name42" field.
func TableName42EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName42, v))
}

// TableName42ContainsFold applies the ContainsFold predicate on the "table_name42" field.
func TableName42ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName42, v))
}

// AlteredTableName43EQ applies the EQ predicate on the "altered_table_name43" field.
func AlteredTableName43EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldAlteredTableName43, v))
}

// AlteredTableName43NEQ applies the NEQ predicate on the "altered_table_name43" field.
func AlteredTableName43NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldAlteredTableName43, v))
}

// AlteredTableName43In applies the In predicate on the "altered_table_name43" field.
func AlteredTableName43In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldAlteredTableName43, vs...))
}

// AlteredTableName43NotIn applies the NotIn predicate on the "altered_table_name43" field.
func AlteredTableName43NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldAlteredTableName43, vs...))
}

// AlteredTableName43GT applies the GT predicate on the "altered_table_name43" field.
func AlteredTableName43GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldAlteredTableName43, v))
}

// AlteredTableName43GTE applies the GTE predicate on the "altered_table_name43" field.
func AlteredTableName43GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldAlteredTableName43, v))
}

// AlteredTableName43LT applies the LT predicate on the "altered_table_name43" field.
func AlteredTableName43LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldAlteredTableName43, v))
}

// AlteredTableName43LTE applies the LTE predicate on the "altered_table_name43" field.
func AlteredTableName43LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldAlteredTableName43, v))
}

// AlteredTableName43Contains applies the Contains predicate on the "altered_table_name43" field.
func AlteredTableName43Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldAlteredTableName43, v))
}

// AlteredTableName43HasPrefix applies the HasPrefix predicate on the "altered_table_name43" field.
func AlteredTableName43HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldAlteredTableName43, v))
}

// AlteredTableName43HasSuffix applies the HasSuffix predicate on the "altered_table_name43" field.
func AlteredTableName43HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldAlteredTableName43, v))
}

// AlteredTableName43EqualFold applies the EqualFold predicate on the "altered_table_name43" field.
func AlteredTableName43EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldAlteredTableName43, v))
}

// AlteredTableName43ContainsFold applies the ContainsFold predicate on the "altered_table_name43" field.
func AlteredTableName43ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldAlteredTableName43, v))
}

// TableName44EQ applies the EQ predicate on the "table_name44" field.
func TableName44EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName44, v))
}

// TableName44NEQ applies the NEQ predicate on the "table_name44" field.
func TableName44NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName44, v))
}

// TableName44In applies the In predicate on the "table_name44" field.
func TableName44In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName44, vs...))
}

// TableName44NotIn applies the NotIn predicate on the "table_name44" field.
func TableName44NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName44, vs...))
}

// TableName44GT applies the GT predicate on the "table_name44" field.
func TableName44GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName44, v))
}

// TableName44GTE applies the GTE predicate on the "table_name44" field.
func TableName44GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName44, v))
}

// TableName44LT applies the LT predicate on the "table_name44" field.
func TableName44LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName44, v))
}

// TableName44LTE applies the LTE predicate on the "table_name44" field.
func TableName44LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName44, v))
}

// TableName44Contains applies the Contains predicate on the "table_name44" field.
func TableName44Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName44, v))
}

// TableName44HasPrefix applies the HasPrefix predicate on the "table_name44" field.
func TableName44HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName44, v))
}

// TableName44HasSuffix applies the HasSuffix predicate on the "table_name44" field.
func TableName44HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName44, v))
}

// TableName44EqualFold applies the EqualFold predicate on the "table_name44" field.
func TableName44EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName44, v))
}

// TableName44ContainsFold applies the ContainsFold predicate on the "table_name44" field.
func TableName44ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName44, v))
}

// TableName45EQ applies the EQ predicate on the "table_name45" field.
func TableName45EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName45, v))
}

// TableName45NEQ applies the NEQ predicate on the "table_name45" field.
func TableName45NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName45, v))
}

// TableName45In applies the In predicate on the "table_name45" field.
func TableName45In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName45, vs...))
}

// TableName45NotIn applies the NotIn predicate on the "table_name45" field.
func TableName45NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName45, vs...))
}

// TableName45GT applies the GT predicate on the "table_name45" field.
func TableName45GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName45, v))
}

// TableName45GTE applies the GTE predicate on the "table_name45" field.
func TableName45GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName45, v))
}

// TableName45LT applies the LT predicate on the "table_name45" field.
func TableName45LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName45, v))
}

// TableName45LTE applies the LTE predicate on the "table_name45" field.
func TableName45LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName45, v))
}

// TableName45Contains applies the Contains predicate on the "table_name45" field.
func TableName45Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName45, v))
}

// TableName45HasPrefix applies the HasPrefix predicate on the "table_name45" field.
func TableName45HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName45, v))
}

// TableName45HasSuffix applies the HasSuffix predicate on the "table_name45" field.
func TableName45HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName45, v))
}

// TableName45EqualFold applies the EqualFold predicate on the "table_name45" field.
func TableName45EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName45, v))
}

// TableName45ContainsFold applies the ContainsFold predicate on the "table_name45" field.
func TableName45ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName45, v))
}

// TableName46EQ applies the EQ predicate on the "table_name46" field.
func TableName46EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName46, v))
}

// TableName46NEQ applies the NEQ predicate on the "table_name46" field.
func TableName46NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName46, v))
}

// TableName46In applies the In predicate on the "table_name46" field.
func TableName46In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName46, vs...))
}

// TableName46NotIn applies the NotIn predicate on the "table_name46" field.
func TableName46NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName46, vs...))
}

// TableName46GT applies the GT predicate on the "table_name46" field.
func TableName46GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName46, v))
}

// TableName46GTE applies the GTE predicate on the "table_name46" field.
func TableName46GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName46, v))
}

// TableName46LT applies the LT predicate on the "table_name46" field.
func TableName46LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName46, v))
}

// TableName46LTE applies the LTE predicate on the "table_name46" field.
func TableName46LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName46, v))
}

// TableName46Contains applies the Contains predicate on the "table_name46" field.
func TableName46Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName46, v))
}

// TableName46HasPrefix applies the HasPrefix predicate on the "table_name46" field.
func TableName46HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName46, v))
}

// TableName46HasSuffix applies the HasSuffix predicate on the "table_name46" field.
func TableName46HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName46, v))
}

// TableName46EqualFold applies the EqualFold predicate on the "table_name46" field.
func TableName46EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName46, v))
}

// TableName46ContainsFold applies the ContainsFold predicate on the "table_name46" field.
func TableName46ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName46, v))
}

// TableName47EQ applies the EQ predicate on the "table_name47" field.
func TableName47EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName47, v))
}

// TableName47NEQ applies the NEQ predicate on the "table_name47" field.
func TableName47NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName47, v))
}

// TableName47In applies the In predicate on the "table_name47" field.
func TableName47In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName47, vs...))
}

// TableName47NotIn applies the NotIn predicate on the "table_name47" field.
func TableName47NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName47, vs...))
}

// TableName47GT applies the GT predicate on the "table_name47" field.
func TableName47GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName47, v))
}

// TableName47GTE applies the GTE predicate on the "table_name47" field.
func TableName47GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName47, v))
}

// TableName47LT applies the LT predicate on the "table_name47" field.
func TableName47LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName47, v))
}

// TableName47LTE applies the LTE predicate on the "table_name47" field.
func TableName47LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName47, v))
}

// TableName47Contains applies the Contains predicate on the "table_name47" field.
func TableName47Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName47, v))
}

// TableName47HasPrefix applies the HasPrefix predicate on the "table_name47" field.
func TableName47HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName47, v))
}

// TableName47HasSuffix applies the HasSuffix predicate on the "table_name47" field.
func TableName47HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName47, v))
}

// TableName47EqualFold applies the EqualFold predicate on the "table_name47" field.
func TableName47EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName47, v))
}

// TableName47ContainsFold applies the ContainsFold predicate on the "table_name47" field.
func TableName47ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName47, v))
}

// TableName48EQ applies the EQ predicate on the "table_name48" field.
func TableName48EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName48, v))
}

// TableName48NEQ applies the NEQ predicate on the "table_name48" field.
func TableName48NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName48, v))
}

// TableName48In applies the In predicate on the "table_name48" field.
func TableName48In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName48, vs...))
}

// TableName48NotIn applies the NotIn predicate on the "table_name48" field.
func TableName48NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName48, vs...))
}

// TableName48GT applies the GT predicate on the "table_name48" field.
func TableName48GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName48, v))
}

// TableName48GTE applies the GTE predicate on the "table_name48" field.
func TableName48GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName48, v))
}

// TableName48LT applies the LT predicate on the "table_name48" field.
func TableName48LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName48, v))
}

// TableName48LTE applies the LTE predicate on the "table_name48" field.
func TableName48LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName48, v))
}

// TableName48Contains applies the Contains predicate on the "table_name48" field.
func TableName48Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName48, v))
}

// TableName48HasPrefix applies the HasPrefix predicate on the "table_name48" field.
func TableName48HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName48, v))
}

// TableName48HasSuffix applies the HasSuffix predicate on the "table_name48" field.
func TableName48HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName48, v))
}

// TableName48EqualFold applies the EqualFold predicate on the "table_name48" field.
func TableName48EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName48, v))
}

// TableName48ContainsFold applies the ContainsFold predicate on the "table_name48" field.
func TableName48ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName48, v))
}

// TableName49EQ applies the EQ predicate on the "table_name49" field.
func TableName49EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldTableName49, v))
}

// TableName49NEQ applies the NEQ predicate on the "table_name49" field.
func TableName49NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldTableName49, v))
}

// TableName49In applies the In predicate on the "table_name49" field.
func TableName49In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldTableName49, vs...))
}

// TableName49NotIn applies the NotIn predicate on the "table_name49" field.
func TableName49NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldTableName49, vs...))
}

// TableName49GT applies the GT predicate on the "table_name49" field.
func TableName49GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldTableName49, v))
}

// TableName49GTE applies the GTE predicate on the "table_name49" field.
func TableName49GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldTableName49, v))
}

// TableName49LT applies the LT predicate on the "table_name49" field.
func TableName49LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldTableName49, v))
}

// TableName49LTE applies the LTE predicate on the "table_name49" field.
func TableName49LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldTableName49, v))
}

// TableName49Contains applies the Contains predicate on the "table_name49" field.
func TableName49Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldTableName49, v))
}

// TableName49HasPrefix applies the HasPrefix predicate on the "table_name49" field.
func TableName49HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldTableName49, v))
}

// TableName49HasSuffix applies the HasSuffix predicate on the "table_name49" field.
func TableName49HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldTableName49, v))
}

// TableName49EqualFold applies the EqualFold predicate on the "table_name49" field.
func TableName49EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldTableName49, v))
}

// TableName49ContainsFold applies the ContainsFold predicate on the "table_name49" field.
func TableName49ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldTableName49, v))
}

// AlteredTableName50EQ applies the EQ predicate on the "altered_table_name50" field.
func AlteredTableName50EQ(v string) predicate.User {
	return predicate.User(sql.FieldEQ(FieldAlteredTableName50, v))
}

// AlteredTableName50NEQ applies the NEQ predicate on the "altered_table_name50" field.
func AlteredTableName50NEQ(v string) predicate.User {
	return predicate.User(sql.FieldNEQ(FieldAlteredTableName50, v))
}

// AlteredTableName50In applies the In predicate on the "altered_table_name50" field.
func AlteredTableName50In(vs ...string) predicate.User {
	return predicate.User(sql.FieldIn(FieldAlteredTableName50, vs...))
}

// AlteredTableName50NotIn applies the NotIn predicate on the "altered_table_name50" field.
func AlteredTableName50NotIn(vs ...string) predicate.User {
	return predicate.User(sql.FieldNotIn(FieldAlteredTableName50, vs...))
}

// AlteredTableName50GT applies the GT predicate on the "altered_table_name50" field.
func AlteredTableName50GT(v string) predicate.User {
	return predicate.User(sql.FieldGT(FieldAlteredTableName50, v))
}

// AlteredTableName50GTE applies the GTE predicate on the "altered_table_name50" field.
func AlteredTableName50GTE(v string) predicate.User {
	return predicate.User(sql.FieldGTE(FieldAlteredTableName50, v))
}

// AlteredTableName50LT applies the LT predicate on the "altered_table_name50" field.
func AlteredTableName50LT(v string) predicate.User {
	return predicate.User(sql.FieldLT(FieldAlteredTableName50, v))
}

// AlteredTableName50LTE applies the LTE predicate on the "altered_table_name50" field.
func AlteredTableName50LTE(v string) predicate.User {
	return predicate.User(sql.FieldLTE(FieldAlteredTableName50, v))
}

// AlteredTableName50Contains applies the Contains predicate on the "altered_table_name50" field.
func AlteredTableName50Contains(v string) predicate.User {
	return predicate.User(sql.FieldContains(FieldAlteredTableName50, v))
}

// AlteredTableName50HasPrefix applies the HasPrefix predicate on the "altered_table_name50" field.
func AlteredTableName50HasPrefix(v string) predicate.User {
	return predicate.User(sql.FieldHasPrefix(FieldAlteredTableName50, v))
}

// AlteredTableName50HasSuffix applies the HasSuffix predicate on the "altered_table_name50" field.
func AlteredTableName50HasSuffix(v string) predicate.User {
	return predicate.User(sql.FieldHasSuffix(FieldAlteredTableName50, v))
}

// AlteredTableName50EqualFold applies the EqualFold predicate on the "altered_table_name50" field.
func AlteredTableName50EqualFold(v string) predicate.User {
	return predicate.User(sql.FieldEqualFold(FieldAlteredTableName50, v))
}

// AlteredTableName50ContainsFold applies the ContainsFold predicate on the "altered_table_name50" field.
func AlteredTableName50ContainsFold(v string) predicate.User {
	return predicate.User(sql.FieldContainsFold(FieldAlteredTableName50, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.User) predicate.User {
	return predicate.User(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.User) predicate.User {
	return predicate.User(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.User) predicate.User {
	return predicate.User(func(s *sql.Selector) {
		p(s.Not())
	})
}
