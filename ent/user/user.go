// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTableName0 holds the string denoting the table_name0 field in the database.
	FieldTableName0 = "table_name0"
	// FieldTableName1 holds the string denoting the table_name1 field in the database.
	FieldTableName1 = "table_name1"
	// FieldTableName2 holds the string denoting the table_name2 field in the database.
	FieldTableName2 = "table_name2"
	// FieldTableName3 holds the string denoting the table_name3 field in the database.
	FieldTableName3 = "table_name3"
	// FieldTableName4 holds the string denoting the table_name4 field in the database.
	FieldTableName4 = "table_name4"
	// FieldTableName5 holds the string denoting the table_name5 field in the database.
	FieldTableName5 = "table_name5"
	// FieldTableName6 holds the string denoting the table_name6 field in the database.
	FieldTableName6 = "table_name6"
	// FieldTableName7 holds the string denoting the table_name7 field in the database.
	FieldTableName7 = "table_name7"
	// FieldTableName8 holds the string denoting the table_name8 field in the database.
	FieldTableName8 = "table_name8"
	// FieldTableName9 holds the string denoting the table_name9 field in the database.
	FieldTableName9 = "table_name9"
	// FieldTableName10 holds the string denoting the table_name10 field in the database.
	FieldTableName10 = "table_name10"
	// FieldTableName11 holds the string denoting the table_name11 field in the database.
	FieldTableName11 = "table_name11"
	// FieldTableName12 holds the string denoting the table_name12 field in the database.
	FieldTableName12 = "table_name12"
	// FieldTableName13 holds the string denoting the table_name13 field in the database.
	FieldTableName13 = "table_name13"
	// FieldTableName14 holds the string denoting the table_name14 field in the database.
	FieldTableName14 = "table_name14"
	// FieldTableName15 holds the string denoting the table_name15 field in the database.
	FieldTableName15 = "table_name15"
	// FieldTableName16 holds the string denoting the table_name16 field in the database.
	FieldTableName16 = "table_name16"
	// FieldTableName17 holds the string denoting the table_name17 field in the database.
	FieldTableName17 = "table_name17"
	// FieldTableName18 holds the string denoting the table_name18 field in the database.
	FieldTableName18 = "table_name18"
	// FieldTableName19 holds the string denoting the table_name19 field in the database.
	FieldTableName19 = "table_name19"
	// FieldTableName20 holds the string denoting the table_name20 field in the database.
	FieldTableName20 = "table_name20"
	// FieldTableName21 holds the string denoting the table_name21 field in the database.
	FieldTableName21 = "table_name21"
	// FieldTableName22 holds the string denoting the table_name22 field in the database.
	FieldTableName22 = "table_name22"
	// FieldTableName23 holds the string denoting the table_name23 field in the database.
	FieldTableName23 = "table_name23"
	// FieldTableName24 holds the string denoting the table_name24 field in the database.
	FieldTableName24 = "table_name24"
	// FieldTableName25 holds the string denoting the table_name25 field in the database.
	FieldTableName25 = "table_name25"
	// FieldTableName26 holds the string denoting the table_name26 field in the database.
	FieldTableName26 = "table_name26"
	// FieldTableName27 holds the string denoting the table_name27 field in the database.
	FieldTableName27 = "table_name27"
	// FieldTableName28 holds the string denoting the table_name28 field in the database.
	FieldTableName28 = "table_name28"
	// FieldTableName29 holds the string denoting the table_name29 field in the database.
	FieldTableName29 = "table_name29"
	// FieldTableName30 holds the string denoting the table_name30 field in the database.
	FieldTableName30 = "table_name30"
	// FieldTableName31 holds the string denoting the table_name31 field in the database.
	FieldTableName31 = "table_name31"
	// FieldTableName32 holds the string denoting the table_name32 field in the database.
	FieldTableName32 = "table_name32"
	// FieldTableName33 holds the string denoting the table_name33 field in the database.
	FieldTableName33 = "table_name33"
	// FieldTableName34 holds the string denoting the table_name34 field in the database.
	FieldTableName34 = "table_name34"
	// FieldTableName35 holds the string denoting the table_name35 field in the database.
	FieldTableName35 = "table_name35"
	// FieldTableName36 holds the string denoting the table_name36 field in the database.
	FieldTableName36 = "table_name36"
	// FieldTableName37 holds the string denoting the table_name37 field in the database.
	FieldTableName37 = "table_name37"
	// FieldTableName38 holds the string denoting the table_name38 field in the database.
	FieldTableName38 = "table_name38"
	// FieldTableName39 holds the string denoting the table_name39 field in the database.
	FieldTableName39 = "table_name39"
	// FieldTableName40 holds the string denoting the table_name40 field in the database.
	FieldTableName40 = "table_name40"
	// FieldTableName41 holds the string denoting the table_name41 field in the database.
	FieldTableName41 = "table_name41"
	// FieldTableName42 holds the string denoting the table_name42 field in the database.
	FieldTableName42 = "table_name42"
	// FieldAlteredTableName43 holds the string denoting the altered_table_name43 field in the database.
	FieldAlteredTableName43 = "altered_table_name43"
	// FieldTableName44 holds the string denoting the table_name44 field in the database.
	FieldTableName44 = "table_name44"
	// FieldTableName45 holds the string denoting the table_name45 field in the database.
	FieldTableName45 = "table_name45"
	// FieldTableName46 holds the string denoting the table_name46 field in the database.
	FieldTableName46 = "table_name46"
	// FieldTableName47 holds the string denoting the table_name47 field in the database.
	FieldTableName47 = "table_name47"
	// FieldTableName48 holds the string denoting the table_name48 field in the database.
	FieldTableName48 = "table_name48"
	// FieldTableName49 holds the string denoting the table_name49 field in the database.
	FieldTableName49 = "table_name49"
	// FieldAlteredTableName50 holds the string denoting the altered_table_name50 field in the database.
	FieldAlteredTableName50 = "altered_table_name50"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTableName0,
	FieldTableName1,
	FieldTableName2,
	FieldTableName3,
	FieldTableName4,
	FieldTableName5,
	FieldTableName6,
	FieldTableName7,
	FieldTableName8,
	FieldTableName9,
	FieldTableName10,
	FieldTableName11,
	FieldTableName12,
	FieldTableName13,
	FieldTableName14,
	FieldTableName15,
	FieldTableName16,
	FieldTableName17,
	FieldTableName18,
	FieldTableName19,
	FieldTableName20,
	FieldTableName21,
	FieldTableName22,
	FieldTableName23,
	FieldTableName24,
	FieldTableName25,
	FieldTableName26,
	FieldTableName27,
	FieldTableName28,
	FieldTableName29,
	FieldTableName30,
	FieldTableName31,
	FieldTableName32,
	FieldTableName33,
	FieldTableName34,
	FieldTableName35,
	FieldTableName36,
	FieldTableName37,
	FieldTableName38,
	FieldTableName39,
	FieldTableName40,
	FieldTableName41,
	FieldTableName42,
	FieldAlteredTableName43,
	FieldTableName44,
	FieldTableName45,
	FieldTableName46,
	FieldTableName47,
	FieldTableName48,
	FieldTableName49,
	FieldAlteredTableName50,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the User queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByTableName0 orders the results by the table_name0 field.
func ByTableName0(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName0, opts...).ToFunc()
}

// ByTableName1 orders the results by the table_name1 field.
func ByTableName1(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName1, opts...).ToFunc()
}

// ByTableName2 orders the results by the table_name2 field.
func ByTableName2(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName2, opts...).ToFunc()
}

// ByTableName3 orders the results by the table_name3 field.
func ByTableName3(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName3, opts...).ToFunc()
}

// ByTableName4 orders the results by the table_name4 field.
func ByTableName4(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName4, opts...).ToFunc()
}

// ByTableName5 orders the results by the table_name5 field.
func ByTableName5(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName5, opts...).ToFunc()
}

// ByTableName6 orders the results by the table_name6 field.
func ByTableName6(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName6, opts...).ToFunc()
}

// ByTableName7 orders the results by the table_name7 field.
func ByTableName7(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName7, opts...).ToFunc()
}

// ByTableName8 orders the results by the table_name8 field.
func ByTableName8(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName8, opts...).ToFunc()
}

// ByTableName9 orders the results by the table_name9 field.
func ByTableName9(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName9, opts...).ToFunc()
}

// ByTableName10 orders the results by the table_name10 field.
func ByTableName10(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName10, opts...).ToFunc()
}

// ByTableName11 orders the results by the table_name11 field.
func ByTableName11(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName11, opts...).ToFunc()
}

// ByTableName12 orders the results by the table_name12 field.
func ByTableName12(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName12, opts...).ToFunc()
}

// ByTableName13 orders the results by the table_name13 field.
func ByTableName13(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName13, opts...).ToFunc()
}

// ByTableName14 orders the results by the table_name14 field.
func ByTableName14(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName14, opts...).ToFunc()
}

// ByTableName15 orders the results by the table_name15 field.
func ByTableName15(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName15, opts...).ToFunc()
}

// ByTableName16 orders the results by the table_name16 field.
func ByTableName16(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName16, opts...).ToFunc()
}

// ByTableName17 orders the results by the table_name17 field.
func ByTableName17(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName17, opts...).ToFunc()
}

// ByTableName18 orders the results by the table_name18 field.
func ByTableName18(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName18, opts...).ToFunc()
}

// ByTableName19 orders the results by the table_name19 field.
func ByTableName19(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName19, opts...).ToFunc()
}

// ByTableName20 orders the results by the table_name20 field.
func ByTableName20(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName20, opts...).ToFunc()
}

// ByTableName21 orders the results by the table_name21 field.
func ByTableName21(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName21, opts...).ToFunc()
}

// ByTableName22 orders the results by the table_name22 field.
func ByTableName22(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName22, opts...).ToFunc()
}

// ByTableName23 orders the results by the table_name23 field.
func ByTableName23(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName23, opts...).ToFunc()
}

// ByTableName24 orders the results by the table_name24 field.
func ByTableName24(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName24, opts...).ToFunc()
}

// ByTableName25 orders the results by the table_name25 field.
func ByTableName25(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName25, opts...).ToFunc()
}

// ByTableName26 orders the results by the table_name26 field.
func ByTableName26(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName26, opts...).ToFunc()
}

// ByTableName27 orders the results by the table_name27 field.
func ByTableName27(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName27, opts...).ToFunc()
}

// ByTableName28 orders the results by the table_name28 field.
func ByTableName28(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName28, opts...).ToFunc()
}

// ByTableName29 orders the results by the table_name29 field.
func ByTableName29(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName29, opts...).ToFunc()
}

// ByTableName30 orders the results by the table_name30 field.
func ByTableName30(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName30, opts...).ToFunc()
}

// ByTableName31 orders the results by the table_name31 field.
func ByTableName31(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName31, opts...).ToFunc()
}

// ByTableName32 orders the results by the table_name32 field.
func ByTableName32(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName32, opts...).ToFunc()
}

// ByTableName33 orders the results by the table_name33 field.
func ByTableName33(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName33, opts...).ToFunc()
}

// ByTableName34 orders the results by the table_name34 field.
func ByTableName34(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName34, opts...).ToFunc()
}

// ByTableName35 orders the results by the table_name35 field.
func ByTableName35(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName35, opts...).ToFunc()
}

// ByTableName36 orders the results by the table_name36 field.
func ByTableName36(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName36, opts...).ToFunc()
}

// ByTableName37 orders the results by the table_name37 field.
func ByTableName37(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName37, opts...).ToFunc()
}

// ByTableName38 orders the results by the table_name38 field.
func ByTableName38(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName38, opts...).ToFunc()
}

// ByTableName39 orders the results by the table_name39 field.
func ByTableName39(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName39, opts...).ToFunc()
}

// ByTableName40 orders the results by the table_name40 field.
func ByTableName40(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName40, opts...).ToFunc()
}

// ByTableName41 orders the results by the table_name41 field.
func ByTableName41(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName41, opts...).ToFunc()
}

// ByTableName42 orders the results by the table_name42 field.
func ByTableName42(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName42, opts...).ToFunc()
}

// ByAlteredTableName43 orders the results by the altered_table_name43 field.
func ByAlteredTableName43(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlteredTableName43, opts...).ToFunc()
}

// ByTableName44 orders the results by the table_name44 field.
func ByTableName44(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName44, opts...).ToFunc()
}

// ByTableName45 orders the results by the table_name45 field.
func ByTableName45(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName45, opts...).ToFunc()
}

// ByTableName46 orders the results by the table_name46 field.
func ByTableName46(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName46, opts...).ToFunc()
}

// ByTableName47 orders the results by the table_name47 field.
func ByTableName47(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName47, opts...).ToFunc()
}

// ByTableName48 orders the results by the table_name48 field.
func ByTableName48(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName48, opts...).ToFunc()
}

// ByTableName49 orders the results by the table_name49 field.
func ByTableName49(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTableName49, opts...).ToFunc()
}

// ByAlteredTableName50 orders the results by the altered_table_name50 field.
func ByAlteredTableName50(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlteredTableName50, opts...).ToFunc()
}
